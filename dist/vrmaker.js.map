{"version":3,"sources":["webpack://vrmaker/webpack/universalModuleDefinition","webpack://vrmaker/webpack/bootstrap","webpack://vrmaker/./src/common/utils.js","webpack://vrmaker/./src/krpanoViewer/krpano-constants.js","webpack://vrmaker/./src/common/helpers.js","webpack://vrmaker/./src/common/resources.js","webpack://vrmaker/./src/common/common-viewer.js","webpack://vrmaker/./src/krpanoViewer/xml/common.js","webpack://vrmaker/./src/aframeViewer/aframe-constants.js","webpack://vrmaker/./src/aframeViewer/index.js","webpack://vrmaker/./node_modules/method-missing/lib/error.js","webpack://vrmaker/./node_modules/method-missing/lib/proxy.js","webpack://vrmaker/./node_modules/method-missing/lib/method-missing.js","webpack://vrmaker/./node_modules/method-missing/index.js","webpack://vrmaker/./node_modules/extends-classes/lib/extends-classes.js","webpack://vrmaker/./node_modules/extends-classes/index.js","webpack://vrmaker/./src/krpanoViewer/extends/loading-panorama.js","webpack://vrmaker/./src/krpanoViewer/extends/init-view.js","webpack://vrmaker/./src/krpanoViewer/extends/basic.js","webpack://vrmaker/./src/krpanoViewer/extends/tripod.js","webpack://vrmaker/./src/krpanoViewer/extends/gyro.js","webpack://vrmaker/./src/krpanoViewer/extends/auto-rotate.js","webpack://vrmaker/./src/krpanoViewer/xml/actions.js","webpack://vrmaker/./src/krpanoViewer/xml/scenes.js","webpack://vrmaker/./src/krpanoViewer/xml/events.js","webpack://vrmaker/./src/krpanoViewer/xml/tripod.js","webpack://vrmaker/./src/krpanoViewer/xml/styles.js","webpack://vrmaker/./src/krpanoViewer/hooks.js","webpack://vrmaker/./src/krpanoViewer/krpano-helpers.js","webpack://vrmaker/./src/krpanoViewer/xml/plugins.js","webpack://vrmaker/./src/krpanoViewer/index.js","webpack://vrmaker/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","push","array","unshift","clone","obj","newObj","constructor","key","loadedUrls","isEmpty","undefined","keys","length","Array","isEqual","a","b","aKeys","getOwnPropertyNames","bKeys","every","updateObject","oldObject","updatedValues","_extends","getIEVersion","ua","navigator","userAgent","msie","indexOf","parseInt","substring","rv","edge","loadImage","async","url","callback","onprogress","e","onerror","String","some","loadedUrl","xmlHttp","XMLHttpRequest","open","responseType","onload","Math","ceil","loaded","total","send","loadAllImages","filter","existUrl","map","Promise","resolve","reject","Error","error","all","then","catch","console","countText","string","instr","re","RegExp","match","isFunction","callee","Function","enterFullScreen","document","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","exitFullScreen","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","_utils","_krpanoId","_xml","_krpanoEl","_krpanoVrModeObj","vrModeShouldHide","vrModeShouldShow","_krpanoLookAtH","krpanoConstants","setKrpanoId","krpanoId","setKrpanoXml","xml","setKrpanoEl","krpanoEl","addVrModeShouldHide","item","addVrModeShouldShow","setKrpanoLookAtH","h","getKrpanoId","getKrpanoXml","getKrpanoEl","getKrpanoVrModeObj","getKrpanoLookAtH","getDefaultFov","getKrpanoXOffset","getVrThumbAth","checkPanoramaFormat","panorama","panoramaId","isRtl","lang","browserLang","toLowerCase","log","xmlUrlString","replace","xmlString","escape","krpanoEnterString","krpanoAutoBlank","onlySingleLine","stringAfterBlank","split","word","lengthInUtf8Bytes","splice","join","encodeURIComponent","getCorrectRotation","coords3dTo2d","x","y","z","sqrt","ath","atan2","PI","atv","asin","rootUrl","frontArrowImage","gyroMessageMinJs","gyro2MinJs","leftArrowImage","leftFrontArrowImage","linkImage","logoTripodImage","memoImage","menuImage","nextPanoramaImage","pointImage","prevPanoramaImage","rightArrowImage","rightFrontArrowImage","tagImage","threeKrpanopluginMinJs","videoImage","webvrMinJs","webvrCursorImage","_helpers","_package","_el","WeakMap","_panoramas","_currentPanorama","_version","init","options","this","setVersion","version","initEl","el","initPanoramas","panoramas","getVersion","panoramaIndex","selectPanorama","addPanoramas","concat","addPanorama","updatePanorama","id","payload","foundIndex","foundPanorama","find","index","updatedPanorama","newPanoramas","updateCurrentPanorama","findIndex","removePanorama","filteredPanoramas","getEl","getPanoramas","getCurrentPanorama","markerAlpha","_sceneEl","_skyEl","_cameraEl","aframeConstants","setSceneEl","sceneEl","setSkyEl","skyEl","setCameraEl","cameraEl","getSceneEl","getSkyEl","getCameraEl","_commonViewer2","default","super","arguments","checkAframe","generateAframe","config","aSceneEl","createElement","_aframeConstants2","aSkyEl","aCameraContainerEl","aCameraEl","aAnimationEl","aAssetsEl","panoramaRotation","cameraStartRotation","setAttribute","append","forEach","imgEl","src","downloadLink","appendChild","cameraX","cameraY","cameraZ","disableVR","addEventListener","emit","changePanorama","currentPanorama","toggleVRMode","boolean","enterVR","exitVR","destroy","parentNode","removeChild","AFRAME","[object Object]","msg","captureStackTrace","MethodMissingError","Class","method","Proxy","prop","Reflect","has","args","proxy","that","MethodMissing","constructors","opts","arg","props","assign","_loadingSettings","onLoadingPanoramaStart","onLoadingPanoramaFinish","onLoadingPanoramaProgress","event","onLoadingPanoramaError","setLoadingSettings","settings","getLoadingSettings","_initViewSettings","active","setInitViewSettings","getInitViewSettings","_basicSettings","mwheel","focus","setBasicSettings","getBasicSettings","_tripodSettings","image","size","setTripodSettings","getTripodSettings","_gyroSettings","setGyroSettings","getGyroSettings","setGyroActive","res","_krpanoConstants","_cameraRotateConfig","isCameraRotating","autoStartRotateTimer","_autoRotateSettings","revert","rotateDuration","restartTime","setAutoRotateSettings","getAutoRotateSettings","startAutoRotate","_krpanoConstants2","stopAutoRotate","shouldAutoStartRotate","duration","clearTimeout","setTimeout","_common","startIndex","autoRotateSettings","showPlanetView","direction","result","horizontalCount","floor","krpanoVrModeObj","getSceneXml","hotspot","sceneXml","isTopLogo","cubemapReady","cubemapLinks","scene","startupScene","setLogoTripodSize","logoSize","isNaN","showTop","_resources","markerInfoCss","markerInfoCommonAttribute","markerIconCommonAttribute","markerIconSize","style","verticalCount","oy","vrThumbAth","thumbnail","customCategory","category","vm","bool","prepareChangeScene","nextPanoramaName","nextPanoramaId","selectedMethod","nextPanoramaRotation","isMarkerPoint","markerAth","gyroSettings","loadingSettings","oldIndex","newIndex","oldHLookat","changeImage","isWebVr","threeJsMoving","animationStart","build_scene","threeJsMovingStop","markerMousein","mouseX","mouseY","markerMouseout","setMarkerInfo","changeCamera","v","handleShowPopup","exitVrMode","clickKrpanoScreen","krpanoHelpers","embedPano","basicSettings","handleKrpanoReady","hooks","_hooks2","stopAutoRotateEvent","addEvent","embedpano","target","bgcolor","wmode","vars","initvars","basepath","consolelog","mobilescale","fakedevice","lazyLoad","html5","webglsettings","depth","passQueryParameters","onready","setConfig","tripodSettings","initViewSettings","keydownHandler","keyCode","stopAutoRotateHandler","removeEvent","removeEventListener","webVRXml","gyroXml","contextMenuXml","threeJsXml","gyroMessageXml","_plugins","_extendsClasses2","_autoRotate2","_gyro2","_tripod4","_basic2","_initView2","_loadingPanorama2","checkKrpano","generateKrpano","removepano","random","_krpanoHelpers2","initKrpanoVRMode","stylesXml","_styles2","scenesXml","_scenes2","actionsXml","_actions2","logoTripodXml","_tripod2","_events2","generateXml","toggleGyro","krpanoJS","VRMaker","AframeViewer","KrpanoViewer"],"mappings":"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","file":"vrmaker.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vrmaker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vrmaker\"] = factory();\n\telse\n\t\troot[\"vrmaker\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 30);\n","export const push = (array, value) => [...array, value]\n\nexport const unshift = (array, value) => [value, ...array]\n\nexport const clone = (obj) => {\n  if (!obj && typeof obj !== 'object') {\n    return\n  }\n  let newObj = obj.constructor === Object ? {} : []\n  for (let key in obj) {\n    newObj[key] = (obj[key] && typeof obj[key] === 'object') ? clone(obj[key]) : obj[key]\n  }\n  return newObj\n}\n\nexport const isEmpty = (value) => {\n  if (!value || value === undefined) {\n    return true\n  } else if (value.constructor === Object) {\n    return Object.keys(value).length === 0\n  } else if (value.constructor === Array) {\n    return value.length === 0\n  }\n}\n\nexport const isEqual = (a, b) => {\n  const aKeys = Object.getOwnPropertyNames(a)\n  const bKeys = Object.getOwnPropertyNames(b)\n  if (aKeys.length !== bKeys.length) {\n    return\n  }\n  return aKeys.every(key => a[key] === b[key])\n}\n\nexport const updateObject = (oldObject, updatedValues) => {\n  return {\n    ...oldObject,\n    ...updatedValues\n  }\n}\n\n/**\n * detect IE\n * returns version of IE or false, if browser is not Internet Explorer\n */\nexport const getIEVersion = () => {\n  const ua = window.navigator.userAgent\n  const msie = ua.indexOf('MSIE ')\n  if (msie > 0) {\n    // IE 10 or older => return version number\n    return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10)\n  }\n\n  const trident = ua.indexOf('Trident/')\n  if (trident > 0) {\n    // IE 11 => return version number\n    const rv = ua.indexOf('rv:')\n    return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10)\n  }\n\n  const edge = ua.indexOf('Edge/')\n  if (edge > 0) {\n    // Edge (IE 12+) => return version number\n    return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10)\n  }\n\n  // other browser\n  return false\n}\n\nconst loadedUrls = []\nexport const loadImage = async (url = '', callback = () => {\n}, onprogress = e => {\n}, onerror = () => {\n}) => {\n  if (typeof url === 'string' || url instanceof String) {\n    try {\n      const hasLoaded = loadedUrls.some(loadedUrl => loadedUrl === url)\n      if (hasLoaded) {\n        callback()\n        return\n      }\n      const xmlHttp = new XMLHttpRequest() // eslint-disable-line\n      xmlHttp.open('GET', url, true)\n      xmlHttp.responseType = 'arraybuffer'\n      xmlHttp.onload = () => {\n        loadedUrls.push(url)\n        callback()\n      }\n      xmlHttp.onprogress = e => {\n        onprogress(Math.ceil(e.loaded / e.total * 100))\n      }\n      xmlHttp.onerror = () => {\n        onerror()\n      }\n      xmlHttp.send()\n    } catch (e) {\n    }\n  } else if ((typeof url === 'object' || url instanceof Object) && url.length > 0) {\n    const urls = url.filter(existUrl => existUrl)\n    const loadAllImages = urls.map(url => {\n      return new Promise((resolve, reject) => {\n        try {\n          const hasLoaded = loadedUrls.some(loadedUrl => loadedUrl === url)\n          if (hasLoaded) {\n            callback()\n            return\n          }\n          const xmlHttp = new XMLHttpRequest() // eslint-disable-line\n          xmlHttp.open('GET', url, true)\n          xmlHttp.responseType = 'arraybuffer'\n          xmlHttp.onload = () => {\n            loadedUrls.push(url)\n            resolve()\n          }\n          xmlHttp.onerror = () => {\n            onerror()\n            reject(new Error('image load error'))\n          }\n          xmlHttp.send()\n        } catch (error) {\n          reject(new Error(error))\n        }\n      })\n    })\n    await Promise.all(loadAllImages).then(() => {\n      callback()\n    }).catch(error => {\n      console.error(error)\n    })\n  }\n}\n\n// 計算 instr 在 string 裡出現幾次\nexport const countText = (string, instr) => {\n  const re = new RegExp(instr, 'g')\n  return (string.match(re) || []).length\n}\n\nexport const isFunction = (callee) => {\n  return typeof callee === 'function' && callee instanceof Function\n}\n\nexport const enterFullScreen = () => {\n  if (document.requestFullscreen) {\n    document.requestFullscreen()\n  } else if (document.webkitRequestFullscreen) {\n    document.webkitRequestFullscreen()\n  } else if (document.mozRequestFullScreen) {\n    document.mozRequestFullScreen()\n  } else if (document.msRequestFullscreen) {\n    document.msRequestFullscreen()\n  }\n}\n\nexport const exitFullScreen = () => {\n  if (document.exitFullscreen) {\n    document.exitFullscreen()\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen()\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen()\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen()\n  }\n}\n","import { clone } from '@/common/utils'\n\nlet _krpanoId = ''\nlet _xml = ''\nlet _krpanoEl = {}\nlet _krpanoVrModeObj = {\n  vrModeShouldHide: [],\n  vrModeShouldShow: ['vr_menu_bg', 'vr_menu_l', 'vr_menu', 'vr_menu_r']\n}\nlet _krpanoLookAtH = 0\nconst krpanoConstants = {\n  setKrpanoId: krpanoId => {\n    _krpanoId = krpanoId\n  },\n\n  setKrpanoXml: xml => {\n    _xml = xml\n  },\n\n  setKrpanoEl: krpanoEl => {\n    _krpanoEl = krpanoEl\n  },\n\n  addVrModeShouldHide: item => {\n    _krpanoVrModeObj.vrModeShouldHide.push(item)\n  },\n\n  addVrModeShouldShow: item => {\n    _krpanoVrModeObj.vrModeShouldShow.push(item)\n  },\n\n  setKrpanoLookAtH: h => {\n    _krpanoLookAtH = h\n  },\n\n  getKrpanoId: () => _krpanoId,\n  getKrpanoXml: () => _xml,\n  getKrpanoEl: () => _krpanoEl,\n  getKrpanoVrModeObj: () => clone(_krpanoVrModeObj),\n  getKrpanoLookAtH: () => _krpanoLookAtH,\n  getDefaultFov: () => 120,\n  getKrpanoXOffset: () => 90,\n  getVrThumbAth: () => 24\n}\n\nexport default krpanoConstants\n","export const checkPanoramaFormat = (panorama) => {\n  if (!panorama.panoramaId) {\n    throw new Error('panoramaId is required')\n  }\n}\n\nexport const isRtl = (lang = '') => {\n  const browserLang = lang.toLowerCase()\n  switch (browserLang) {\n    case 'ar': case 'ar-dz': case 'ar-bh': case 'ar-eg': case 'ar-iq': case 'ar-jo':\n    case 'ar-kw': case 'ar-lb': case 'ar-ly': case 'ar-ma': case 'ar-om': case 'ar-qa':\n    case 'ar-sa': case 'ar-sy': case 'ar-tn': case 'ar-ae': case 'ar-ye':\n      console.log('is rtl', browserLang)\n      return true\n    default:\n      return false\n  }\n}\n\n// if s contains control character, it will let krpano broken\nexport const xmlUrlString = (s = '') => {\n  s = s.replace(/&/g, '&amp;')\n  s = s.replace(/</g, '&lt;')\n  s = s.replace(/>/g, '&gt;')\n  s = s.replace(/'/g, '&apos;')\n  s = s.replace(/\"/g, '&quot;')\n  return s\n}\n\nexport const xmlString = (s = '') => {\n  if (!s) {\n    return s\n  }\n  s = window.escape(s)\n  s = s.replace(/%3A/g, ':')\n  s = s.replace(/%23/g, '#')\n  s = s.replace(/%25/g, '%')\n  s = s.replace(/%3F/g, '?')\n  s = s.replace(/%26/g, '&amp;')\n  s = s.replace(/%3D/g, '=')\n  s = s.replace(/%5B/g, '[')\n  s = s.replace(/%5D/g, ']')\n  return s\n}\n\nexport const krpanoEnterString = (string = '') => {\n  return string.replace(/\\n/g, '[br]')\n}\n\nexport const krpanoAutoBlank = (string = '', n = 15, onlySingleLine = false) => { // n = max Latin-1 text in one line\n  let stringAfterBlank\n  stringAfterBlank = string.replace(/\\[br\\]/g, ' [br]')\n  stringAfterBlank = stringAfterBlank.split(/[\\n\\t ]/g)\n  stringAfterBlank = stringAfterBlank.map(word => {\n    if (lengthInUtf8Bytes(word) >= (n * 2)) {\n      for (let i = n; i <= word.length; i += (n + ' [br]'.length)) {\n        if (onlySingleLine) {\n          word = word.splice(i, 0, '... [br]')\n        } else {\n          word = word.splice(i, 0, ' [br]')\n        }\n      }\n    }\n    return word\n  })\n  stringAfterBlank = stringAfterBlank.join(' ')\n  stringAfterBlank = stringAfterBlank.replace(/ \\[br\\]/g, '[br]')\n  return stringAfterBlank\n}\n\nexport const lengthInUtf8Bytes = (string = '') => {\n  // Matches only the 10.. bytes that are non-initial characters in a multi-byte sequence.\n  const m = encodeURIComponent(string).match(/%[89ABab]/g)\n  return string.length + (m ? (m.length - 1) : 0)\n}\n\nexport const getCorrectRotation = (value) => {\n  // make rotation into -180 ~ 180\n  while (value < -180 || value > 180) {\n    if (value < -180) {\n      value += 360\n    }\n    if (value > 180) {\n      value -= 360\n    }\n  }\n\n  return value\n}\n\nexport const coords3dTo2d = ({ x, y, z }) => {\n  const r = Math.sqrt(x * x + y * y + z * z)\n  const ath = -Math.atan2(x, z) * 180 / Math.PI + 180\n  const atv = -Math.asin(y / r) * 180 / Math.PI\n  return { ath, atv }\n}\n","const rootUrl = 'https://www.istaging.com/sdk/'\n\nexport const frontArrowImage = `${rootUrl}front-arrow.png`\nexport const gyroMessageMinJs = `${rootUrl}gyro-message.min.js`\nexport const gyro2MinJs = `${rootUrl}gyro2.min.js`\nexport const leftArrowImage = `${rootUrl}left-arrow.png`\nexport const leftFrontArrowImage = `${rootUrl}left-front-arrow.png`\nexport const linkImage = `${rootUrl}link.png`\nexport const logoTripodImage = `${rootUrl}logo-tripod.png`\nexport const memoImage = `${rootUrl}memo.png`\nexport const menuImage = `${rootUrl}menu.png`\nexport const nextPanoramaImage = `${rootUrl}next-panorama.png`\nexport const pointImage = `${rootUrl}point.png`\nexport const prevPanoramaImage = `${rootUrl}prev-panorama.png`\nexport const rightArrowImage = `${rootUrl}right-arrow.png`\nexport const rightFrontArrowImage = `${rootUrl}right-front-arrow.png`\nexport const tagImage = `${rootUrl}tag.png`\nexport const threeKrpanopluginMinJs = `${rootUrl}three.krpanoplugin.min.js`\nexport const videoImage = `${rootUrl}video.png`\nexport const webvrMinJs = `${rootUrl}webvr.min.js`\nexport const webvrCursorImage = `${rootUrl}webvr_cursor_80x80_17f.png`\n","import {\n  clone,\n  push,\n  updateObject\n} from '@/common/utils'\nimport {\n  checkPanoramaFormat\n} from '@/common/helpers'\nimport { version } from '@/../package.json'\n\nlet _el = new WeakMap()\nlet _panoramas = new WeakMap()\nlet _currentPanorama = new WeakMap()\nlet _version = new WeakMap()\n\nclass CommonViewer {\n  init (options) {\n    this.setVersion(version)\n    this.initEl(options.el)\n    this.initPanoramas(options.panoramas)\n    console.log('VRMaker version: ', this.getVersion())\n    _currentPanorama = (options.panoramaIndex !== undefined)\n      ? options.panoramaIndex\n      : options.panoramas[0]\n  }\n\n  initEl (el) {\n    _el = el\n  }\n\n  initPanoramas (panoramas) {\n    panoramas.map(panorama => checkPanoramaFormat(panorama))\n\n    _panoramas = panoramas\n    this.selectPanorama(panoramas[0].panoramaId)\n  }\n\n  addPanoramas (panoramas) {\n    _panoramas = _panoramas.concat(panoramas)\n  }\n\n  addPanorama (panorama) {\n    _panoramas = push(panorama, _panoramas)\n  }\n\n  updatePanorama (id, payload = {}) {\n    let foundIndex\n    const foundPanorama = _panoramas.find((panorama, index) => {\n      foundIndex = index\n      return panorama.panoramaId === id\n    })\n    if (!foundPanorama) {\n      throw new Error('updatePanorama failed, id can\\'t find panorama')\n    }\n    const updatedPanorama = updateObject(foundPanorama, payload)\n    const newPanoramas = clone(_panoramas)\n    newPanoramas.splice(foundIndex, 1, updatedPanorama)\n    _panoramas = newPanoramas\n  }\n\n  updateCurrentPanorama (payload = {}) {\n    const foundIndex = _panoramas.findIndex(panorama => (\n      panorama.panoramaId === _currentPanorama.panoramaId\n    ))\n    if (!_currentPanorama) {\n      throw new Error('updatePanorama failed, id can\\'t find panorama')\n    }\n    const updatedPanorama = updateObject(_currentPanorama, payload)\n    _currentPanorama = updatedPanorama\n    const newPanoramas = clone(_panoramas)\n    newPanoramas.splice(foundIndex, 1, updatedPanorama)\n    _panoramas = newPanoramas\n  }\n\n  removePanorama (id) {\n    const filteredPanoramas = _panoramas.filter(panorama => (\n      panorama.panoramaId !== id\n    ))\n    _panoramas = clone(filteredPanoramas)\n  }\n\n  selectPanorama (id) {\n    if (!id) {\n      throw new Error('selectPanorama id is required')\n    }\n    const foundPanorama = _panoramas.find(panorama => panorama.panoramaId === id)\n    if (!foundPanorama) {\n      throw new Error('Panorama is not found by your id')\n    }\n    _currentPanorama = foundPanorama\n    return _currentPanorama\n  }\n\n  getEl () {\n    return _el\n  }\n\n  getPanoramas () {\n    return clone(_panoramas)\n  }\n\n  getCurrentPanorama () {\n    return clone(_currentPanorama)\n  }\n\n  getVersion () {\n    return _version\n  }\n\n  setVersion (version) {\n    _version = version\n  }\n}\n\nexport default CommonViewer\n","export const markerAlpha = '.6'\n","let _sceneEl = {}\nlet _skyEl = {}\nlet _cameraEl = {}\n\nconst aframeConstants = {\n  setSceneEl: (sceneEl) => {\n    _sceneEl = sceneEl\n  },\n\n  setSkyEl: (skyEl) => {\n    _skyEl = skyEl\n  },\n\n  setCameraEl: (cameraEl) => {\n    _cameraEl = cameraEl\n  },\n\n  getSceneEl: () => _sceneEl,\n  getSkyEl: () => _skyEl,\n  getCameraEl: () => _cameraEl\n}\n\nexport default aframeConstants\n","import {\n  enterFullScreen,\n  exitFullScreen, isFunction, loadImage\n} from '@/common/utils'\nimport CommonViewer from '@/common/common-viewer.js'\nimport aframeConstants from '@/aframeViewer/aframe-constants'\n\nclass AframeViewer extends CommonViewer {\n  constructor () {\n    super(...arguments)\n    this.checkAframe()\n  }\n\n  generateAframe (config) {\n    const aSceneEl = document.createElement('a-scene')\n    aframeConstants.setSceneEl(aSceneEl)\n    const aSkyEl = document.createElement('a-sky')\n    aframeConstants.setSkyEl(aSkyEl)\n    const aCameraContainerEl = document.createElement('a-entity')\n    const aCameraEl = document.createElement('a-camera')\n    const aAnimationEl = document.createElement('a-animation')\n    const aAssetsEl = document.createElement('a-assets')\n    const el = this.getEl()\n    const { panoramaRotation } = this.getCurrentPanorama()\n    const cameraRotationOffset = 90\n    aframeConstants.setCameraEl(aCameraEl)\n    let cameraStartRotation = panoramaRotation || {}\n\n    // a-assets\n    aAssetsEl.setAttribute('timeout', '1000')\n    aSceneEl.append(aAssetsEl)\n    this.getPanoramas().forEach(panorama => {\n      const imgEl = document.createElement('img')\n      imgEl.src = panorama.downloadLink\n      imgEl.id = panorama.panoramaId\n      aAssetsEl.appendChild(imgEl)\n    })\n\n    // a-sky\n    aSkyEl.setAttribute('src', `#${this.getCurrentPanorama().panoramaId}`)\n    aSceneEl.setAttribute('embedded', '')\n    aSceneEl.appendChild(aSkyEl)\n    el.appendChild(aSceneEl)\n\n    // a-camera\n    const cameraX = cameraStartRotation.x || 0\n    const cameraY = cameraRotationOffset + (cameraStartRotation.y || 0)\n    // const cameraY = cameraStartRotation.y || 0\n    const cameraZ = cameraStartRotation.z || 0\n\n    aCameraContainerEl.setAttribute(\n      'rotation',\n      `${cameraX} ${cameraY} ${cameraZ}`\n    )\n\n    // a-animation\n    aAnimationEl.setAttribute('attribute', 'rotation')\n    aAnimationEl.setAttribute('fill', 'forwards')\n    aAnimationEl.setAttribute('easing', 'linear')\n    aAnimationEl.setAttribute('dur', '200000')\n    aAnimationEl.setAttribute('from', `0 ${0 + cameraRotationOffset} 0`)\n    aAnimationEl.setAttribute('to', `0 ${360 + cameraRotationOffset} 0`)\n    // aAnimation.setAttribute('from', `0 0 0`)\n    // aAnimation.setAttribute('to', `0 360 0`)\n    aAnimationEl.setAttribute('repeat', 'indefinite')\n    aAnimationEl.setAttribute('startEvents', 'rotation-start')\n    aAnimationEl.setAttribute('pauseEvents', 'rotation-pause')\n\n    // a-scene\n    aCameraContainerEl.appendChild(aCameraEl)\n    aCameraContainerEl.appendChild(aAnimationEl)\n    aSceneEl.appendChild(aCameraContainerEl)\n\n    // config\n    if (config && config.disableVR) {\n      aSceneEl.setAttribute('vr-mode-ui', 'enabled: false')\n    }\n\n    // events\n    aSceneEl.addEventListener('click', function (e) {\n      aAnimationEl.emit('pause')\n    })\n  }\n\n  changePanorama (panoramaId, callback) {\n    this.selectPanorama(panoramaId)\n    const aSkyEl = aframeConstants.getSkyEl()\n    const currentPanorama = this.getCurrentPanorama()\n    loadImage(currentPanorama.downloadLink, () => {\n      aSkyEl.setAttribute('src', `#${this.getCurrentPanorama().panoramaId}`)\n      if (isFunction(callback)) {\n        callback()\n      }\n    })\n  }\n\n  toggleVRMode (boolean) {\n    const aSceneEl = aframeConstants.getSceneEl()\n    if (boolean) {\n      if (isFunction(aSceneEl.enterVR)) {\n        aSceneEl.enterVR()\n      } else {\n        throw new Error('Aframe can\\'t execute enterVR')\n      }\n      enterFullScreen()\n    } else {\n      if (isFunction(aSceneEl.exitVR)) {\n        aSceneEl.exitVR()\n      } else {\n        throw new Error('Aframe can\\'t execute exitVR')\n      }\n      exitFullScreen()\n    }\n  }\n\n  destroy () {\n    const aSceneEl = aframeConstants.getSceneEl()\n    aSceneEl.parentNode.removeChild(aSceneEl)\n    aframeConstants.setSceneEl({})\n    aframeConstants.setSkyEl({})\n  }\n\n  checkAframe () {\n    if (typeof window === 'undefined' || !window.AFRAME) {\n      throw new Error('You need to include aframe script or import it first. Use it before vrmaker.')\n    }\n  }\n}\n\nexport default AframeViewer\n","/*!\n * Method Missing Error.\n *\n * Main application entry.\n * @author Jarrad Seers <jarrad@seers.me>\n * @created 29/03/2017 NZDT\n */\n\n/**\n * Method Missing Error.\n *\n * @class MethodMissingError\n * @extends {Error}\n */\n\nclass MethodMissingError extends Error {\n\n  /**\n   * Creates an instance of MethodMissingError.\n   * @param {any} msg\n   *\n   * @memberOf MethodMissingError\n   */\n\n  constructor(msg) {\n    super(msg);\n    this.name = this.constructor.name;\n    Error.captureStackTrace(this, this.constructor);\n  }\n\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = MethodMissingError;\n","/*!\n * Method Missing.\n *\n * Main application entry.\n * @author Jarrad Seers <jarrad@seers.me>\n * @created 29/03/2017 NZDT\n */\n\n/**\n * Module dependencies.\n */\n\nconst MethodMissingError = require('./error');\n\n/**\n * Main proxy handler.\n *\n * @param {object} Class\n * @param {string} method\n */\n\nfunction proxy(Class, method) {\n\n  return new Proxy(Class, {\n    get(obj, prop) {\n      if (Reflect.has(obj, prop)) {\n        return Reflect.get(obj, prop);\n      } else if (typeof method === 'function') {\n        return function methodMissing(...args) {\n          method.call(this, prop, args);\n        };\n      } else if (Reflect.has(obj, method)) {\n        return function methodMissing(...args) {\n          obj[method].call(this, prop, args);\n        };\n      }\n      const err = `${method}, use method '__call(method, args)' in your class to catch.`;\n      throw new MethodMissingError(err);\n    },\n\n  });\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = proxy;\n","/*!\n * Method Missing.\n *\n * Main application file.\n * @author Jarrad Seers <jarrad@seers.me>\n * @created 29/03/2017 NZDT\n */\n\n/**\n * Module dependencies.\n */\n\nconst proxy = require('./proxy');\n\n/**\n * MethodMissing Class\n *\n * @class MethodMissing\n */\n\nclass MethodMissing {\n\n  /**\n   * Creates an instance of MethodMissing.\n   * @param {any} method\n   *\n   * @memberOf MethodMissing\n   */\n\n  constructor(method) {\n    return proxy(this, method || '__call');\n  }\n\n  /**\n   * Static method handler.\n   *\n   * @static\n   * @param {any} that\n   * @param {any} method\n   * @returns\n   *\n   * @memberOf MethodMissing\n   */\n\n  static static(that, method) {\n    return proxy(that, method || '__call');\n  }\n\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = MethodMissing;\n","/*!\n * Method Missing.\n *\n * Application entry file.\n * @author Jarrad Seers <jarrad@seers.me>\n * @created 29/03/2017 NZDT\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./lib/method-missing');\n","/*!\n * Extends Classes.\n *\n * Main application file.\n * @author Jarrad Seers <jarrad@seers.me>\n * @created 30/03/2017 NZDT\n */\n\n/**\n * Module dependencies.\n */\n\nconst MethodMissing = require('method-missing');\n\n/**\n * Main multi-class function.\n *\n * @param {any} args\n * @returns\n */\n\nfunction classes(...args) {\n  const constructors = [];\n\n  /**\n   * Skeleton Class.\n   *\n   * @class Class\n   * @extends {MethodMissing}\n   */\n\n  class Class extends MethodMissing {\n\n    /**\n     * Creates an instance of Class.\n     *\n     * @memberOf Class\n     */\n\n    constructor(...opts) {\n      super();\n\n      for (const arg of args) {\n        const props = Object.getOwnPropertyNames(arg.prototype);\n\n        for (const prop of props) {\n          if (prop === 'constructor') {\n            constructors.push(arg.prototype.constructor);\n          } else {\n            Class.prototype[prop] = arg.prototype[prop];\n          }\n        }\n      }\n\n      for (const constructor of constructors) {\n        Object.assign(Class.prototype, new constructor(...opts));\n      }\n    }\n\n  }\n\n  return Class;\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = classes;\n","/*!\n * Extends Classes.\n *\n * Main entry file.\n * @author Jarrad Seers <jarrad@seers.me>\n * @created 30/03/2017 NZDT\n */\n\n\nmodule.exports = require('./lib/extends-classes.js');\n","import { clone } from '@/common/utils'\n\nlet _loadingSettings = {\n  onLoadingPanoramaStart () {},\n  onLoadingPanoramaFinish () {},\n  onLoadingPanoramaProgress (event) {},\n  onLoadingPanoramaError (error) { return error }\n}\n\nclass KrpanoLoadingPanorama {\n  setLoadingSettings (settings) {\n    _loadingSettings = settings\n  }\n\n  getLoadingSettings () {\n    return clone(_loadingSettings)\n  }\n}\n\nexport default KrpanoLoadingPanorama\n","import { clone } from '@/common/utils'\n\nlet _initViewSettings = {\n  active: true\n}\n\nclass KrpanoInitView {\n  setInitViewSettings (settings) {\n    _initViewSettings = settings\n  }\n\n  getInitViewSettings () {\n    return clone(_initViewSettings)\n  }\n}\n\nexport default KrpanoInitView\n","import { clone } from '@/common/utils'\n\nlet _basicSettings = {\n  mwheel: true,\n  focus: false\n}\n\nclass KrpanoBasic {\n  setBasicSettings (settings) {\n    _basicSettings = settings\n  }\n\n  getBasicSettings () {\n    return clone(_basicSettings)\n  }\n}\n\nexport default KrpanoBasic\n","import { clone } from '@/common/utils'\nimport { logoTripodImage } from '@/common/resources'\n\nlet _tripodSettings = {\n  image: logoTripodImage,\n  size: 100 // 0 ~ 100\n}\n\nclass KrpanoTripod {\n  setTripodSettings (settings) {\n    _tripodSettings = settings\n  }\n\n  getTripodSettings () {\n    return clone(_tripodSettings)\n  }\n}\n\nexport default KrpanoTripod\n","import { clone } from '@/common/utils'\n\nlet _gyroSettings = {\n  active: false\n}\n\nclass KrpanoGyro {\n  setGyroSettings (settings) {\n    _gyroSettings = settings\n  }\n\n  getGyroSettings () {\n    return clone(_gyroSettings)\n  }\n\n  setGyroActive (res = false) {\n    _gyroSettings.active = res\n  }\n}\n\nexport default KrpanoGyro\n","import {\n  clone,\n  isEmpty\n} from '@/common/utils'\nimport krpanoConstants from '@/krpanoViewer/krpano-constants'\n\nlet _cameraRotateConfig = {\n  isCameraRotating: false,\n  autoStartRotateTimer: null\n}\nlet _autoRotateSettings = {\n  active: false,\n  revert: false,\n  rotateDuration: 200000,\n  restartTime: 20000\n}\n\nclass KrpanoAutoRotate {\n  setAutoRotateSettings (settings) {\n    _autoRotateSettings = settings\n  }\n\n  getAutoRotateSettings () {\n    return clone(_autoRotateSettings)\n  }\n\n  startAutoRotate () {\n    if (!isEmpty(krpanoConstants.getKrpanoEl)) {\n      krpanoConstants.getKrpanoEl().call(`auto_rotate();`)\n    }\n    _cameraRotateConfig.isCameraRotating = true\n  }\n\n  stopAutoRotate (shouldAutoStartRotate = false, duration = 20000) {\n    if (_cameraRotateConfig.isCameraRotating === true) {\n      if (!isEmpty(krpanoConstants.getKrpanoEl)) {\n        krpanoConstants.getKrpanoEl().call(`stop_auto_rotate();`)\n      }\n      _cameraRotateConfig.isCameraRotating = false\n    }\n    if (_cameraRotateConfig.autoStartRotateTimer !== null) {\n      window.clearTimeout(_cameraRotateConfig.autoStartRotateTimer)\n    }\n    if (shouldAutoStartRotate) {\n      _cameraRotateConfig.autoStartRotateTimer = window.setTimeout(() => {\n        this.startAutoRotate()\n      }, duration)\n    } else {\n      _cameraRotateConfig.autoStartRotateTimer = null\n    }\n  }\n}\n\nexport default KrpanoAutoRotate\n","import { markerAlpha } from '@/krpanoViewer/xml/common'\nimport { getIEVersion } from '@/common/utils'\nimport krpanoConstants from '@/krpanoViewer/krpano-constants'\n\nconst getActionsXml = function (panoramas, startIndex = 0) {\n  try {\n    this.getAutoRotateSettings\n  } catch (e) {\n    throw new Error('getActionsXml must use getActionsXml.call(this, ...arg)')\n  }\n  const autoRotateSettings = this.getAutoRotateSettings()\n  const initViewSettings = this.getInitViewSettings()\n  const showPlanetView = initViewSettings.active\n  return `<action name=\"startup\">\n  ${(() => {\n    return process.env.NODE_ENV === 'development'\n      ? 'showlog();'\n      : ''\n  })()}\n  ${(() => {\n    if (showPlanetView) {\n      return `loadscene(first_panorama_${panoramas[startIndex].panoramaId});\n      planet_view();`\n    }\n    return `loadscene(panorama_${panoramas[startIndex].panoramaId});`\n  })()}\n  set(plugin[gyro].enabled, false);\n</action>\n\n<action name=\"first_panorama_ready\">\n<!-- first panorama is vlookat 90, then turn to vlookat 0\n  鳥瞰視角進入後向前看\n-->\n  normal_view();\n  set(plugin[gyro].enabled, %1);\n  wait(1);\n  jscall(calc('krpano.hooks.startAutoRotate()'));\n</action>\n\n<action name=\"look_straight\">\nif (view.vlookat LT -80 OR view.vlookat GT +80, tween(view.vlookat, 0.0, 1.0, easeInOutSine); tween(view.fov, ${krpanoConstants.getDefaultFov()}, distance(150, 0.8)););\n</action>\n\n<action name=\"normal_view\">\n  look_straight();\n  tween(view.architectural, 0.0, distance(2.0,1.5));\n  tween(view.pannini, 0.0, distance(2.0,1.5));\n  tween(view.fisheye, 0.0, distance(2.0,1.5));\n</action>\n\n<action name=\"planet_view\">\n<!-- start planet view -->\n  lookat(${(panoramas[startIndex].panoramaRotation ? -panoramas[startIndex].panoramaRotation.y : 0) + krpanoConstants.getKrpanoXOffset()}, 90, 150);\n  set(view.architectural, 0.0);\n  set(view.pannini, 0.0);\n  set(view.fisheye, 1.0);\n</action>\n\n<action name=\"auto_rotate\">\n<!-- start auto rotate -->\n  ${(() => {\n    let direction = '-'\n    if (autoRotateSettings.revert) {\n      direction = '+'\n    }\n    return `tween(view.hlookat, calc(view.hlookat ${direction} 360), ${autoRotateSettings.rotateDuration / 1000}, linear, auto_rotate());`\n  })()}\n</action>\n\n<action name=\"stop_auto_rotate\">\n<!-- stop auto rotate -->\n  stoptween(view.hlookat);\n</action>\n\n<action name=\"prepare_change_scene\">\n<!-- 儲存當前仰角 All javascript call this action to trigger change scene here first\n  %1 = next scene name\n  %2 = next scene panoramaId\n  %3 = selectedMethod\n  %4 = next scene hlookat offset (for marker)\n  %5 = is clicked from marker point\n  %6 = marker ath\n-->\n<!-- 把 vr 裡的 marker 對應 info 顯示/隱藏 -->\n  set(style[vr_panorama_style].scale, 0);\n  ${(() => {\n    let result = ''\n    let calc = '+'\n    for (let i = 0; i < panoramas.length; i++) {\n      let horizontalCount = Math.floor(i / 4)\n      result += `hotspot[vr_panorama_${i}].loadstyle(vr_panorama_style);\nhotspot[vr_panorama_text_${i}].loadstyle(vr_panorama_style);\nset(hotspot[vr_panorama_${i}].ath, calc(view.hlookat ${calc} ${krpanoConstants.getVrThumbAth() * horizontalCount}));\nset(hotspot[vr_panorama_text_${i}].ath, calc(view.hlookat ${calc} ${krpanoConstants.getVrThumbAth() * horizontalCount}));`\n    }\n    return result\n  })()}\n  jscall(calc('krpano.hooks.prepareChangeScene(\"%1\", \"%2\", \"%3\", \"%4\", %5, %6)'));\n</action>\n\n<action name=\"change_scene\">\n<!--\nchange scene in krpano, and callback to javascript (auto call it from prepare_change_scene)\n%1 ~ %6 is all same with prepare_change_scene\n%7 = newIndex\n%8 = oldIndex\n%9 = oldHLookat\n%10 is gyro enabled\n-->\n  jscall(calc('krpano.hooks.stopAutoRotate()'));\n  if (%10 == true, set(plugin[gyro].enabled, false);); <!-- 切換場景時 Gyro 需要先關閉，切換後設定好 h 視角，再打開 -->\n  if (webvr.isenabled AND webvr.headtracking == true, set(webvr.headtracking, false););\n\n  jscall(calc('krpano.hooks.changeImage(\"%2\", \"%3\", %5, ' + webvr.isenabled + ')'));\n  def(prevVlookat, number, calc(view.vlookat)); <!-- 儲存當前仰角 -->\n  def(prevHlookat, number, calc(view.hlookat)); <!-- 儲存當前視角 -->\n\n  if (%5,\n  ${(() => {\n    if (getIEVersion()) {\n      return 'loadscene(%1, null, MERGE, BLEND(1));'\n    } else {\n      // non-IE do 3.js moving\n      return `jscall(calc('krpano.hooks.threeJsMoving(%4, %6, %7, %8, %9)'));\n    loadscene(%1, null, MERGE, BLEND(0.3));`\n    }\n  })()},\n  loadscene(%1, null, MERGE, BLEND(1));\n  );\n  <!-- 把 vr 裡的 marker 對應 info 顯示/隱藏 -->\n  if(webvr.isenabled, ${(() => {\n    let result = ''\n    const krpanoVrModeObj = krpanoConstants.getKrpanoVrModeObj()\n    krpanoVrModeObj.vrModeShouldShow.forEach(item => {\n      result += ` set(hotspot[${item}].visible,true);`\n    })\n    krpanoVrModeObj.vrModeShouldHide.forEach(item => {\n      result += ` set(hotspot[${item}].visible,false);`\n    })\n    return result\n  })()});\n\n  set(view.vlookat, calc(prevVlookat)); <!-- 使用前一個 camera 仰角 -->\n  if (%4, set(view.hlookat, calc(%4 - (%6 - prevHlookat))));\n  if (%10, set(plugin[gyro].enabled, true);); <!-- 若有啟動 Gyro，在這裡要重新打開 -->\n  if (webvr.isenabled AND webvr.headtracking == false, set(webvr.headtracking, true););\n\n  <!-- 判斷下一個場景是否是 isTopLogo，要切換顯示 -->\n  if (scene[get(xml.scene)].name == '%1' AND scene[get(xml.scene)].isTopLogo == 'true',\n  set(hotspot[topLogoTripod].visible, true);,\n  set(hotspot[topLogoTripod].visible, false););\n\n  ${(() => {\n    if (!getIEVersion()) {\n      return `if (%5,\n      jscall(calc('krpano.hooks.threeJsMovingStop()')); wait(LOAD);,\n      wait(LOAD););`\n    } else {\n      return `wait(LOAD);\n  wait(BLEND);`\n    }\n  })()}\n\n  <!-- 非 VR 模式時啟動自動旋轉 -->\n  if ((webvr.isenabled == false AND webvr.isfake == true) OR\n  (webvr.isenabled == false AND webvr.isfake == false),\n    jscall(calc('krpano.hooks.startAutoRotate()')););\n</action>\n\n<action name=\"toggle_vr_menu\">\n<!-- toggle show/hide menu in vr mode -->\n  if (style[vr_panorama_style].scale == 1,\n    set(style[vr_panorama_style].scale, 0);,\n    set(style[vr_panorama_style].scale, 1););\n  ${(() => {\n    let result = ''\n    let calc = '+'\n    for (let i = 0; i < panoramas.length; i++) {\n      const horizontalCount = Math.floor(i / 4)\n      result += `hotspot[vr_panorama_${i}].loadstyle(vr_panorama_style);\nhotspot[vr_panorama_text_${i}].loadstyle(vr_panorama_style);\nset(hotspot[vr_panorama_${i}].ath, calc(view.hlookat ${calc} ${krpanoConstants.getVrThumbAth() * horizontalCount}));\nset(hotspot[vr_panorama_text_${i}].ath, calc(view.hlookat ${calc} ${krpanoConstants.getVrThumbAth() * horizontalCount}));`\n    }\n    return result\n  })()}\n</action>\n\n<action name=\"nextscene_loop\">\n<!-- %1 Next Panorama: 1, Prev Panorama: -1 -->\n  if(xml.scene != null AND scene.count GT 1,\n    if (scene[get(xml.scene)].index == 0,\n      add(newsceneindex, scene[get(xml.scene)].index, calc(%1 + 1));,\n      add(newsceneindex, scene[get(xml.scene)].index, %1););\n    sub(lastsceneindex, scene.count, 1);\n    if(newsceneindex LT 1, copy(newsceneindex, lastsceneindex));\n    if(newsceneindex GT lastsceneindex, set(newsceneindex, 1));\n    def(selectedMethod, string, 'VrModePrev');\n    if(%1 == 1, set(selectedMethod, 'VrModeNext'));\n    prepare_change_scene(get(scene[get(newsceneindex)].name), get(scene[get(newsceneindex)].panoramaId), get(selectedMethod), 0);\n  );\n</action>\n\n<action name=\"marker_mousein\">\n<!-- marker hover -->\n  marker_fadein(%1);\n  if(webvr.isenabled, if (%3 == tag, set(hotspot[markerInfoPhoto_%1].scale, 1);\n    set(hotspot[markerInfoBg_%1].scale, 1);\n    set(hotspot[markerInfoTitle_%1].scale, 1);\n    set(hotspot[markerInfoDescription_%1].scale, 1);\n    set(hotspot[markerInfoPrice_%1].scale, 1);,\n    set(hotspot[markerInfo_%1].scale, 1););,\n    spheretoscreen(hotspot[markerInfo_%1].ath, hotspot[markerInfo_%1].atv, mouseX, mouseY);\n    jscall(calc('krpano.hooks.markerMousein(%2, ' + mouseX + ', ' + mouseY + ')')););\n</action>\n\n<action name=\"set_marker_info\">\n  jscall(calc('krpano.hooks.setMarkerInfo(%1)'));\n</action>\n\n<action name=\"marker_mouseout\">\n<!-- marker mouse leave -->\n  marker_fadeout(%1);\n  if(webvr.isenabled, if (%3 == tag, set(hotspot[markerInfoPhoto_%1].scale, 0);\n    set(hotspot[markerInfoBg_%1].scale, 0);\n    set(hotspot[markerInfoTitle_%1].scale, 0);\n    set(hotspot[markerInfoDescription_%1].scale, 0);\n    set(hotspot[markerInfoPrice_%1].scale, 0);,\n    set(hotspot[markerInfo_%1].scale, 0););,\n    jscall(calc('krpano.hooks.markerMouseout(%2)')););\n</action>\n\n<action name=\"marker_fadein\">\n<!-- marker alpha to 1 -->\n  tween(hotspot[marker_%1].alpha, 1, .3, easeOutQuad);\n</action>\n\n<action name=\"marker_fadeout\">\n<!-- marker alpha to ${markerAlpha} -->\n  tween(hotspot[marker_%1].alpha, ${markerAlpha}, .3, easeOutQuad);\n</action>\n\n<action name=\"change_camera\">\n<!-- camera moving listen -->\n  jscall(calc('krpano.hooks.changeCamera(%1, %2)'));\n</action>\n\n<action name=\"handle_show_popup\">\n<!-- click popup marker show popup -->\n  jscall(calc('krpano.hooks.handleShowPopup(%1)'));\n</action>\n\n<action name=\"webvr_onentervr\">\n  ${(() => {\n    let result = ''\n    const krpanoVrModeObj = krpanoConstants.getKrpanoVrModeObj()\n    krpanoVrModeObj.vrModeShouldShow.forEach(item => { result += `set(hotspot[${item}].visible,true);` })\n    krpanoVrModeObj.vrModeShouldHide.forEach(item => { result += `set(hotspot[${item}].visible,false);` })\n    return result\n  })()}\n  jscall(calc('krpano.hooks.stopAutoRotate()'));\n  webvr_showbuttons();\n  webvr_hide_all_non_vr_layers();\n  if(webvr.isfake, webvr_show_fakemode_info(true););\n</action>\n\n<action name=\"webvr_onexitvr\">\n  ${(() => {\n    let result = ''\n    const krpanoVrModeObj = krpanoConstants.getKrpanoVrModeObj()\n    krpanoVrModeObj.vrModeShouldShow.forEach(item => { result += `set(hotspot[${item}].visible,false);` })\n    krpanoVrModeObj.vrModeShouldHide.forEach(item => { result += `set(hotspot[${item}].visible,true);` })\n    return result\n  })()}\n  stopdelayedcall(vr_button_fadeout);\n  tween(layer[webvr_exitbutton].alpha,0);\n  tween(layer[webvr_setupbutton].alpha,0);\n  webvr_show_fakemode_info(false);\n  webvr_restore_layers();\n  jscall(calc('krpano.hooks.startAutoRotate()'));\n</action>\n\n<action name=\"vr_menu_following\" type=\"Javascript\" devices=\"html5\"><![CDATA[\nvar hs1 = krpano.get(\"hotspot[vr_menu_bg]\");\nvar hs2 = krpano.get(\"hotspot[vr_menu_l]\");\nvar hs3 = krpano.get(\"hotspot[vr_menu]\");\nvar hs4 = krpano.get(\"hotspot[vr_menu_r]\");\nif (!hs1.hovering && !hs2.hovering && !hs3.hovering && !hs4.hovering) {\n  var f = 0.01;\n  var h = krpano.view.hlookat;\n  var v = krpano.view.vlookat;\n  var hsh = hs1.ath;\n  var hsv = hs1.atv;\n  h = (h-(h|0)) + (((h|0)+360180)%360) - 180.0;\n  hsh = (hsh-(hsh|0)) + (((hsh|0)+360180)%360) - 180.0;\n  dh = h - hsh;\n  dh += (dh>180) ? -360 : (dh<-180) ? 360 : 0\n  hsh += dh*f;\n  var a = Math.abs(v - hs1.atv) / 90.0;\n  a = 0.5 * Math.max(1.0 - 2.0 * Math.sqrt(a), 0);\n  v = v + 55.0 - v*1.5;\n  hsv = hsv*(1-f) + v*f;\n  hs1.alpha = a;\n  if(!hs2.hovering) hs2.alpha = a;\n  if(!hs3.hovering) hs3.alpha = a;\n  if(!hs4.hovering) hs4.alpha = a;\n  hs4.ath = hs3.ath = hs2.ath = hs1.ath = hsh;\n  hs4.atv = hs3.atv = hs2.atv = hs1.atv = hsv;\n}]]></action>\n\n<action name=\"vr_menu_over\">\ncallwith(hotspot[vr_menu_bg], tween(alpha|depth,1.0|650); );\ncallwith(hotspot[vr_menu_l], tween(alpha|depth,0.5|650); );\ncallwith(hotspot[vr_menu], tween(alpha|depth,0.5|650); );\ncallwith(hotspot[vr_menu_r], tween(alpha|depth,0.5|650); );\n</action>\n\n<action name=\"vr_menu_out\">\nif(hotspot[vr_menu].hovering == false,\n  callwith(hotspot[vr_menu_bg], tween(alpha|depth,0.25|800); );\n  callwith(hotspot[vr_menu_l], tween(alpha|depth,0.25|800); );\n  callwith(hotspot[vr_menu], tween(alpha|depth,0.25|800); );\n  callwith(hotspot[vr_menu_r], tween(alpha|depth,0.25|800); );\n);\n</action>\n\n<action name=\"zoom_in\">\ntween(view.fov, calc(view.fov - 30), .3, easeOutQuad);\n</action>\n\n<action name=\"zoom_out\">\ntween(view.fov, calc(view.fov + 30), .3, easeOutQuad);\n</action>\n\n<layer name=\"webvr_exitbutton\" keep=\"true\" vr=\"true\"\nstyle=\"webvr_button_style\"\nhtml=\"Exit VR\"\nalign=\"top\" y=\"24\"\nautoalpha=\"true\" alpha=\"0.0\"\nonclick=\"jscall(calc('krpano.hooks.exitVrMode()'));\"\n/>\n\n<action name=\"start_gyro\">\nset('plugin[gyro].enabled', 'true');\n</action>\n\n<action name=\"stop_gyro\">\nset('plugin[gyro].enabled', 'false');\n</action>\n\n<action name=\"hover_closest_point_marker\">\n<!-- 得到公用參數 m_ath, m_atv -->\nscreentosphere(mouse.x, mouse.y, m_ath, m_atv);\njscall(calc('krpano.hooks.findClosestPointMarker(' + m_ath + ', ' + m_atv + ', krpano.hooks.hoverClosestPointMarker);'));\n</action>\n\n<action name=\"click_krpano_screen\">\njscall(calc('krpano.hooks.clickKrpanoScreen();'));\n</action>\n\n<action name=\"enter_closest_point_marker\">\n<!-- 滑鼠點的位置 -->\nscreentosphere(mouse.x, mouse.y, m_ath, m_atv);\njscall(calc('krpano.hooks.findClosestPointMarker(' + m_ath + ', ' + m_atv + ', krpano.hooks.enterClosestPointMarker);'));\n</action>`\n}\n\nexport default getActionsXml\n","import {\n  coords3dTo2d,\n  getCorrectRotation,\n  xmlString,\n  xmlUrlString\n} from '@/common/helpers'\n// import {\n//   isEmpty\n// } from '@/common/utils'\nimport krpanoConstants from '@/krpanoViewer/krpano-constants'\n// import getMarkerMemoXml from './marker-memo'\n// import getMarkerPointXml from './marker-point'\n// import getMarkerTagXml from './marker-tag'\n\n// startIndex is started from 0\nconst getScenesXml = function (panoramas, startIndex) {\n  try {\n    krpanoConstants.getKrpanoXOffset\n  } catch (e) {\n    throw new Error('getScenesXml must use getScenesXml.call(this, ...arg)')\n  }\n  let scene = ''\n  let startupScene = ''\n  panoramas.forEach((panorama, index) => {\n    let hotspot = ''\n//     if (panorama.markers && panorama.markers.length) {\n//       panorama.markers.forEach((marker, index) => {\n//         let { ath, atv } = coords3dTo2d(marker.position)\n//         ath = getCorrectRotation(ath + this.getKrpanoXOffset())\n//         const useCustomIcon = this.customSetting.customBranding && marker.useCustomIcon && marker.iconUrl\n//\n//         switch (marker.type) {\n//           case 'point':\n//             this.addVrModeShouldShow(`markerInfo_${marker.objectId}`)\n//             const category = nextPanoramaCategoryName(marker)\n//             const isMarkerPoint = true\n//             hotspot += getMarkerPointXml(marker, ath, atv, category, hotspotIcon, useCustomIcon, index, isMarkerPoint, this.getKrpanoXOffset)\n//             break\n//           case 'memo':\n//             this.addVrModeShouldShow(`markerInfo_${marker.objectId}`)\n//             hotspot += getMarkerMemoXml(marker, ath, atv, category, hotspotIcon, useCustomIcon, index)\n//             break\n//           case 'tag':\n//             hotspot += getMarkerTagXml(marker, ath, atv, category, hotspotIcon, useCustomIcon, index, this.addVrModeShouldShow)\n//             break\n//           case 'popup':\n//             this.addVrModeShouldHide(`marker_${marker.objectId}`)\n//             hotspot += `<hotspot name=\"marker_${marker.objectId}\" style=\"${hotspotIcon(marker, useCustomIcon)}\"\n// onclick=\"handle_show_popup(${index});\" onover=\"marker_mousein(${marker.objectId}, ${index});\" onout=\"marker_mouseout(${marker.objectId}, ${index});\"\n// visible=\"true\" scale=\"1\" zorder=\"1\" ath=\"${ath}\" atv=\"${atv}\" />`\n//             break\n//           default:\n//         }\n//       })\n//     }\n\n    if (index === startIndex) {\n      // for planet view init look at\n      startupScene = `<scene name=\"first_panorama_${panorama.panoramaId}\" isTopLogo=\"${panorama.isTopLogo}\">\n    <view hlookat=\"${(panorama.panoramaRotation ? -panorama.panoramaRotation.y : 0) + krpanoConstants.getKrpanoXOffset()}\" vlookat=\"90\" fovtype=\"MFOV\" fov=\"140\" fovmin=\"30\" fovmax=\"${krpanoConstants.getDefaultFov()}\"\n    limitview=\"fullrange\" vlookatmin=\"-90\" vlookatmax=\"90\" />\n  ${(() => {\n        if (panorama.cubemapReady) {\n          return `<preview url=\"${panorama.cubemapLinks[0] ? xmlUrlString(panorama.cubemapLinks[0]) : ''}\" />\n<image><cube url=\"${panorama.cubemapLinks[1] ? xmlUrlString(panorama.cubemapLinks[1]) : ''}\" /></image>`\n        } else {\n          return `<image><sphere url=\"${panorama.downloadLink ? xmlUrlString(panorama.downloadLink) : ''}\" /></image>`\n        }\n      })()}\n${hotspot}</scene>`\n    }\n    scene += getSceneXml.call(this, panorama, hotspot)\n  })\n  scene = startupScene + scene\n  return scene\n}\n\nconst getSceneXml = function (panorama, hotspot) {\n  let sceneXml = ''\n  sceneXml += `<scene name=\"panorama_${panorama.panoramaId}\" title=\"${xmlString(panorama.name)}\" panoramaId=\"${panorama.panoramaId}\" isTopLogo=\"${panorama.isTopLogo}\">\n    <view hlookat=\"${(panorama.panoramaRotation ? -panorama.panoramaRotation.y : 0) + krpanoConstants.getKrpanoXOffset()}\" vlookat=\"0\" fovtype=\"MFOV\" fov=\"${krpanoConstants.getDefaultFov()}\" fovmin=\"30\" fovmax=\"${krpanoConstants.getDefaultFov()}\"\n    limitview=\"fullrange\" vlookatmin=\"-90\" vlookatmax=\"90\" />\n    ${(() => {\n    if (panorama.cubemapReady) {\n      return `<preview url=\"${panorama.cubemapLinks[0] ? xmlUrlString(panorama.cubemapLinks[0]) : ''}\" />\n<image><cube url=\"${panorama.cubemapLinks[1] ? xmlUrlString(panorama.cubemapLinks[1]) : ''}\" /></image>`\n    } else {\n      return `<image><sphere url=\"${panorama.downloadLink ? xmlUrlString(panorama.downloadLink) : ''}\" /></image>`\n    }\n  })()}\n    ${hotspot}</scene>`\n  return sceneXml\n}\n\n// function nextPanoramaCategoryName (marker = {}) {\n//   if (!this.panoramas || this.panoramas.length <= 0) {\n//     return\n//   }\n//   const foundPanorama = this.panoramas.find(panorama =>\n//     panorama.objectId === marker.nextPanoramaId\n//   )\n//   if (isEmpty(foundPanorama)) {\n//     return\n//   }\n//   return xmlString(foundPanorama.customCategory || foundPanorama.category)\n// }\n\nexport default getScenesXml\n","const eventsXml = `<events name=\"changeCamera\" keep=\"true\" onviewchange=\"change_camera(get('view.hlookat'), get('view.vlookat'));\" />\n<events name=\"logoTripod\" keep=\"true\" onviewchange=\"copy(hotspot[logoTripod].rotate, view.hlookat));\" />\n<events name=\"topLogoTripod\" keep=\"true\" onviewchange=\"def(rotate, string, calc(view.hlookat * -1));copy(hotspot[topLogoTripod].rotate, rotate);\" />\n<events name=\"vr_menu_events\" keep=\"true\" onviewchange=\"vr_menu_following();\" />\n<events onclick=\"click_krpano_screen();\" />`\n\nexport default eventsXml\n","import {\n  xmlUrlString\n} from '@/common/helpers'\n\n// size: 0% ~ 100%\nfunction setLogoTripodSize (logoSize) {\n  if (window.isNaN(logoSize) || logoSize <= 0) {\n    return 0\n  }\n  return (logoSize / 100)\n}\n\nconst getLogoTripodXml = (image, logoSize, showTop = false) => (\n  `<hotspot name=\"logoTripod\" keep=\"true\" url=\"${xmlUrlString(image)}\" ath=\"0\" atv=\"90\"\ndistorted=\"true\" scale=\"${setLogoTripodSize(logoSize)}\" enabled=\"false\" />\n<hotspot name=\"topLogoTripod\" keep=\"true\" url=\"${xmlUrlString(image)}\" ath=\"0\" atv=\"-90\" distorted=\"true\"\n scale=\"${setLogoTripodSize(logoSize)}\" visible=\"${showTop}\" enabled=\"false\" />`\n)\n\nexport default getLogoTripodXml\n","import {\n  xmlString,\n  xmlUrlString,\n  krpanoAutoBlank,\n  krpanoEnterString\n} from '@/common/helpers'\nimport {\n  markerAlpha\n} from '@/krpanoViewer/xml/common'\nimport krpanoConstants from '@/krpanoViewer/krpano-constants'\nimport {\n  linkImage,\n  memoImage,\n  pointImage,\n  tagImage,\n  videoImage,\n  leftArrowImage,\n  rightArrowImage,\n  frontArrowImage,\n  leftFrontArrowImage,\n  rightFrontArrowImage,\n  prevPanoramaImage,\n  menuImage,\n  nextPanoramaImage\n} from '@/common/resources'\nconst markerInfoCss = 'font-family:Arial; color:#fff;'\nconst markerInfoCommonAttribute = 'scale=\"1\" distorted=\"true\" wordwrap=\"true\" bgcolor=\"0x000000\" bgalpha=\".8\"'\nconst markerIconCommonAttribute = `zoom=\"true\" distorted=\"true\" scale=\"1\" vr_timeout=\"700\" keep=\"false\" alpha=\"${markerAlpha}\"`\nconst markerIconSize = 'width=\"51.2\" height=\"51.2\"'\n\nconst basicStyles = () => {\n  let prev = '-1'\n  let next = '+1'\n  return `<style name=\"link\" url=\"${linkImage}\" ${markerIconCommonAttribute} ${markerIconSize} />\n<style name=\"memo\" url=\"${memoImage}\" ${markerIconCommonAttribute} ${markerIconSize} />\n<style name=\"point\" url=\"${pointImage}\" ${markerIconCommonAttribute} ${markerIconSize} />\n<style name=\"tag\" url=\"${tagImage}\" ${markerIconCommonAttribute} ${markerIconSize} />\n<style name=\"video\" url=\"${videoImage}\" ${markerIconCommonAttribute} ${markerIconSize} />\n<style name=\"leftArrow\" url=\"${leftArrowImage}\" ${markerIconCommonAttribute} ${markerIconSize} />\n<style name=\"rightArrow\" url=\"${rightArrowImage}\" ${markerIconCommonAttribute} ${markerIconSize} />\n<style name=\"frontArrow\" url=\"${frontArrowImage}\" ${markerIconCommonAttribute} ${markerIconSize} />\n<style name=\"leftFrontArrow\" url=\"${leftFrontArrowImage}\" ${markerIconCommonAttribute} ${markerIconSize} />\n<style name=\"rightFrontArrow\" url=\"${rightFrontArrowImage}\" ${markerIconCommonAttribute} ${markerIconSize} />\n<style name=\"markerInfo\" css=\"${markerInfoCss} font-size:16px;\" padding=\"15\" bg=\"true\" ${markerInfoCommonAttribute} />\n<style name=\"markerInfoTag\" ${markerInfoCommonAttribute} padding=\"0\" bg=\"false\" css=\"${markerInfoCss} font-size:14px;\" />\n<style name=\"markerInfoTagBg\" ${markerInfoCommonAttribute} padding=\"0\" bg=\"true\" css=\"${markerInfoCss} font-size:16px;\" />\n<style name=\"vr_menu_style\" depth=\"800\" scale=\"0.2\" distorted=\"true\" ath=\"0\" atv=\"45\" visible=\"false\" />\n<style name=\"vr_panorama_style\" depth=\"800\" distorted=\"true\" keep=\"true\" scale=\"0\" />\n<hotspot name=\"vr_menu_bg\" style=\"vr_menu_style\" keep=\"true\" zorder=\"5\" bgcolor=\"0x000000\" bgalpha=\".8\" bg=\"true\" type=\"text\"\nwidth=\"300\" height=\"120\" onover=\"vr_menu_over();\" onout=\"vr_menu_out();\" handcursor=\"false\" />\n<hotspot name=\"vr_menu_l\" style=\"vr_menu_style\" keep=\"true\" zorder=\"6\" url=\"${prevPanoramaImage}\"\nwidth=\"60\" height=\"60\" ox=\"-20\" onover=\"vr_menu_over(); delayedcall(0,tween(alpha,0.75,0.1));\" onout=\"vr_menu_out();\" vr_timeout=\"700\" onclick=\"nextscene_loop(${prev});\" />\n<hotspot name=\"vr_menu\" style=\"vr_menu_style\" keep=\"true\" zorder=\"6\" url=\"${menuImage}\"\nwidth=\"60\" height=\"60\" onover=\"vr_menu_over(); delayedcall(0,tween(alpha,0.75,0.1));\" onout=\"vr_menu_out();\" vr_timeout=\"700\" onclick=\"toggle_vr_menu(get('view.hlookat'));\" />\n<hotspot name=\"vr_menu_r\" style=\"vr_menu_style\" keep=\"true\" zorder=\"6\" url=\"${nextPanoramaImage}\"\nwidth=\"60\" height=\"60\" ox=\"+20\" onover=\"vr_menu_over(); delayedcall(0,tween(alpha,0.75,0.1));\" onout=\"vr_menu_out();\" vr_timeout=\"700\" onclick=\"nextscene_loop(${next});\" />`\n}\n\nconst vrThumbWidth = 160\nconst getStylesXml = function (panoramas) {\n  try {\n    krpanoConstants.getVrThumbAth\n  } catch (e) {\n    throw new Error('getStylesXml must use getStylesXml.call(this, ...arg)')\n  }\n  let style = basicStyles()\n  panoramas.forEach((panorama, index) => {\n    const verticalCount = index % 4\n    const horizontalCount = Math.floor(index / 4)\n    // vr mode thumbnail\n    let oy = (-(vrThumbWidth / 2 + 30) * 1.5) + (vrThumbWidth / 2 + 30) * (verticalCount)\n    let vrThumbAth = krpanoConstants.getVrThumbAth() * horizontalCount\n    style += `<hotspot name=\"vr_panorama_${index}\" style=\"vr_panorama_style\" zorder=\"6\" url=\"${xmlUrlString(panorama.thumbnail)}\" vr_timeout=\"2000\"\nath=\"${vrThumbAth}\" oy=\"${oy}\"\nwidth=\"${vrThumbWidth}\" height=\"${vrThumbWidth / 2}\" onclick=\"prepare_change_scene(panorama_${panorama.panoramaId}, ${panorama.panoramaId}, VrModeThumbnail)\" />\n<hotspot name=\"vr_panorama_text_${index}\" css=\"font-family:Arial; color:#fff; font-size:12px; text-align: center; line-height: 18px;\"\ntype=\"text\" html=\"${xmlString(krpanoAutoBlank(krpanoEnterString(panorama.customCategory || panorama.category), 10, true))}\" vr_timeout=\"2000\"\nstyle=\"vr_panorama_style\" bgcolor=\"0x000000\" bgalpha=\".8\" zorder=\"7\"\nath=\"${vrThumbAth}\" oy=\"${oy + 50}\"\nwidth=\"${vrThumbWidth}\" height=\"20\" onclick=\"prepare_change_scene(panorama_${panorama.panoramaId}, ${panorama.panoramaId}, 'VrModeThumbnailText')\" />`\n\n    // load all images from markers\n    // if (panorama.markers && panorama.markers.length) {\n    //   panorama.markers.forEach(marker => {\n    //     if (marker.useCustomIcon && marker.iconUrl) {\n    //       // add custom icon image\n    //       style += `<style name=\"markerCustomIcon_${marker.objectId}\" url=\"${xmlUrlString(marker.iconUrl)}\" ${markerIconCommonAttribute} ${markerIconSize} />`\n    //     }\n    //     if (marker.type === 'tag' && marker.photo) {\n    //       // add tag photo\n    //       style += `<style name=\"markerInfoTagPhoto_${marker.objectId}\" url=\"${xmlUrlString(marker.photo)}\" ${markerIconCommonAttribute} />`\n    //     }\n    //   })\n    // }\n  })\n  return style\n}\n\nexport default getStylesXml\n","import {\n  isFunction,\n  loadImage\n} from '@/common/utils'\nimport krpanoConstants from '@/krpanoViewer/krpano-constants'\n\n// krpano actions use jscall, next step goes here to communicate with vue\n// vm should be this\nconst getHooks = vm => {\n  return {\n    startAutoRotate () {\n      vm.startAutoRotate()\n    },\n    stopAutoRotate (bool = false) {\n      vm.stopAutoRotate(bool)\n    },\n    prepareChangeScene (nextPanoramaName = '', nextPanoramaId = '', selectedMethod = '', nextPanoramaRotation = 0, isMarkerPoint = false, markerAth = 0) {\n      const panoramas = vm.getPanoramas()\n      const currentPanorama = vm.getCurrentPanorama()\n      const gyroSettings = vm.getGyroSettings()\n      const loadingSettings = vm.getLoadingSettings()\n      const oldIndex = panoramas.findIndex(panorama => panorama.panoramaId === currentPanorama.panoramaId)\n      const newIndex = panoramas.findIndex(panorama => panorama.panoramaId === nextPanoramaId)\n      if (newIndex > -1) {\n        const foundPanorama = panoramas[newIndex]\n        const oldHLookat = krpanoConstants.getKrpanoLookAtH()\n        if (isFunction(loadingSettings.onLoadingPanoramaStart)) {\n          loadingSettings.onLoadingPanoramaStart()\n        }\n        const krpanoEl = krpanoConstants.getKrpanoEl()\n        if (foundPanorama.cubemapReady) {\n          krpanoEl.call(`change_scene(${nextPanoramaName}, ${nextPanoramaId}, ${selectedMethod}, ${nextPanoramaRotation},\n           ${isMarkerPoint}, ${markerAth}, ${newIndex}, ${oldIndex}, ${oldHLookat}, ${gyroSettings.active});`)\n          if (isFunction(loadingSettings.onLoadingPanoramaFinish)) {\n            loadingSettings.onLoadingPanoramaFinish()\n          }\n        } else {\n          loadImage(foundPanorama.downloadLink, () => {\n            if (isFunction(loadingSettings.onLoadingPanoramaFinish)) {\n              loadingSettings.onLoadingPanoramaFinish()\n            }\n            krpanoEl.call(`change_scene(${nextPanoramaName}, ${nextPanoramaId}, ${selectedMethod}, ${nextPanoramaRotation},\n             ${isMarkerPoint}, ${markerAth}, ${newIndex}, ${oldIndex}, ${oldHLookat}, ${gyroSettings.active});`)\n          }, (event) => {\n            if (isFunction(loadingSettings.onLoadingPanoramaProgress)) {\n              loadingSettings.onLoadingPanoramaProgress(event)\n            }\n          }, (error) => {\n            if (isFunction(loadingSettings.onLoadingPanoramaError)) {\n              loadingSettings.onLoadingPanoramaError(error)\n            }\n          })\n        }\n      }\n    },\n    changeImage (nextPanoramaId, selectedMethod, isMarkerPoint, isWebVr) {\n      // vm.selectPanorama(nextPanoramaId, selectedMethod, isMarkerPoint, isWebVr)\n    },\n    threeJsMoving (nextPanoramaRotation = 0, markerAth = 0, newIndex, oldIndex, oldHLookat = 0) {\n      // console.log('threeJsMoving', nextPanoramaRotation, markerAth, newIndex, oldIndex, oldHLookat)\n      window.animationStart = true\n      window.build_scene(nextPanoramaRotation, markerAth, newIndex, oldIndex, oldHLookat)\n    },\n    threeJsMovingStop () {\n      // console.log('threeJsMovingStop')\n      window.animationStart = false\n    },\n    markerMousein (index = 0, mouseX = 0, mouseY = 0) {\n      // vm.krpanoMarkerMousein(index, mouseX, mouseY)\n    },\n    markerMouseout (index) {\n      // vm.krpanoMarkerMouseout(index)\n    },\n    setMarkerInfo (index) {\n      // vm.setMarkerInfo(index)\n    },\n    changeCamera (h, v) {\n      krpanoConstants.setKrpanoLookAtH(h)\n    },\n    handleShowPopup (index) {\n      vm.handleShowPopup(index)\n    },\n    exitVrMode () {\n      vm.toggleVRMode(false)\n    },\n    clickKrpanoScreen () {\n      // vm.clickKrpanoScreen()\n    }\n  }\n}\n\nexport default getHooks\n","import { isFunction } from '@/common/utils'\nimport getHooks from '@/krpanoViewer/hooks'\nimport krpanoConstants from '@/krpanoViewer/krpano-constants'\n\n// Note: all function should use by .call(this)\nconst krpanoHelpers = {\n  embedPano (callback) {\n    const el = this.getEl()\n    if (!el) {\n      throw new Error('element not found')\n    }\n    const basicSettings = this.getBasicSettings()\n    const krpanoId = krpanoConstants.getKrpanoId()\n\n    const handleKrpanoReady = (krpanoEl, callback) => {\n      krpanoEl.hooks = getHooks(this)\n      krpanoConstants.setKrpanoEl(krpanoEl)\n      // console.log('pano created', this.krpanoEl.hooks)\n      const xml = krpanoConstants.getKrpanoXml()\n      krpanoEl.call(`loadxml(${escape(xml)})`)\n      window.setTimeout(() => {\n        const gyroSettings = this.getGyroSettings()\n        const autoRotateSettings = this.getAutoRotateSettings()\n        krpanoEl.call(`first_panorama_ready(${gyroSettings.active || false});`)\n        if (autoRotateSettings.active) {\n          this.startAutoRotate()\n          krpanoHelpers.stopAutoRotateEvent.call(this).addEvent()\n        }\n        if (isFunction(callback)) {\n          callback()\n        }\n      }, 1500)\n    }\n\n    window.embedpano({\n      id: krpanoId,\n      target: el.id,\n      xml: '',\n      bgcolor: basicSettings.bgcolor,\n      wmode: basicSettings.wmode,\n      vars: basicSettings.vars,\n      initvars: basicSettings.initvars,\n      basepath: basicSettings.basepath,\n      mwheel: basicSettings.mwheel,\n      focus: basicSettings.focus,\n      consolelog: basicSettings.consolelog,\n      mobilescale: basicSettings.mobilescale,\n      fakedevice: basicSettings.fakedevice,\n      lazyLoad: true,\n      html5: 'webgl+only',\n      webglsettings: { depth: true },\n      passQueryParameters: true,\n      onready: (krpanoEl) => {\n        handleKrpanoReady(krpanoEl, callback)\n      },\n      onerror (msg) {\n        console.error('pano create error', msg)\n      }\n    })\n  },\n\n  setConfig (config = {}) {\n    const {\n      autoRotateSettings,\n      gyroSettings,\n      tripodSettings,\n      basicSettings,\n      loadingSettings,\n      initViewSettings\n    } = config\n    if (autoRotateSettings && isFunction(this.setAutoRotateSettings)) {\n      this.setAutoRotateSettings(autoRotateSettings)\n    }\n    if (gyroSettings && isFunction(this.setGyroSettings)) {\n      this.setGyroSettings(gyroSettings)\n    }\n    if (tripodSettings && isFunction(this.setTripodSettings)) {\n      this.setTripodSettings(tripodSettings)\n    }\n    if (basicSettings && isFunction(this.setBasicSettings)) {\n      this.setBasicSettings(basicSettings)\n    }\n    if (loadingSettings && isFunction(this.setLoadingSettings)) {\n      this.setLoadingSettings(loadingSettings)\n    }\n    if (initViewSettings && isFunction(this.setInitViewSettings)) {\n      this.setInitViewSettings(initViewSettings)\n    }\n  },\n\n  stopAutoRotateEvent () {\n    const autoRotateSettings = this.getAutoRotateSettings()\n    const keydownHandler = (e) => {\n      if (e.keyCode === 37 ||\n        e.keyCode === 38 ||\n        e.keyCode === 39 ||\n        e.keyCode === 40) {\n        this.stopAutoRotate(true, autoRotateSettings.restartTime)\n      }\n    }\n    const stopAutoRotateHandler = () => {\n      this.stopAutoRotate(true, autoRotateSettings.restartTime)\n    }\n    return {\n      addEvent () {\n        window.addEventListener('keydown', keydownHandler)\n        window.addEventListener('mousedown', stopAutoRotateHandler)\n        window.addEventListener('touchstart', stopAutoRotateHandler)\n      },\n      removeEvent () {\n        window.removeEventListener('keydown', keydownHandler)\n        window.removeEventListener('mousedown', stopAutoRotateHandler)\n        window.removeEventListener('touchstart', stopAutoRotateHandler)\n      }\n    }\n  }\n}\n\nexport default krpanoHelpers\n","import {\n  webvrMinJs,\n  webvrCursorImage,\n  threeKrpanopluginMinJs,\n  gyro2MinJs,\n  gyroMessageMinJs\n} from '@/common/resources'\n\nexport const webVRXml = `<plugin name=\"WebVR\" devices=\"html5\" keep=\"true\"\nurl=\"${webvrMinJs}\"\nonloaded=\"copy(webvr, plugin[WebVR]);\"\nmousespeed=\"0.00125\"\nmultireslock=\"true\"\nfullscreen_mirroring=\"true\"\nmobilevr_support=\"true\"\nmobilevr_ipd=\"110\"\nmobilevr_screensize=\"10.0\"\nmobilevr_lens_overlap=\"1.0\"\nmobilevr_lens_fov=\"96\"\nmobilevr_lens_dist=\"0.6\"\nmobilevr_lens_dist2=\"1|0|0|0\"\nmobilevr_lens_ca=\"0.0\"\nmobilevr_lens_vign=\"100\"\nmobilevr_wakelock=\"true\"\nmobilevr_sensor_mode=\"3\"\nmobilevr_autocalibration=\"false\"\nmobilevr_touch_support=\"true\"\nmobilevr_fake_support=\"true\"\nvr_cursor=\"hotspot[vr_cursor]\"\nvr_cursor_enabled=\"true\"\nvr_cursor_onover=\"if(handcursor, tween(hotspot[vr_cursor].scale,0.4,0.1); vr_auto_click(get(vr_timeout)); );\"\nvr_cursor_onout=\"tween(hotspot[vr_cursor].scale,0.3,0.1);\"\nonavailable=\"webvr_onavailable();\"\nonunavailable=\"\"\nonunknowndevice=\"webvr_onunknowndevice();\"\nonentervr=\"webvr_onentervr();\"\nonexitvr=\"webvr_onexitvr();\"\n/>\n\n<vrheadsets>\n<headset name=\"cb1\" caption=\"Cardboard A\"   overlap=\"1.10\" fov=\"96.0\"  dist=\"1.00\" dist2=\"1|0|0|0\" ca=\"0.000\" vig=\"100\" />\n<headset name=\"cb2\" caption=\"Cardboard B\"   overlap=\"1.00\" fov=\"96.0\"  dist=\"0.60\" dist2=\"1|0|0|0\" ca=\"0.000\" vig=\"100\" />\n<headset name=\"gvr\" caption=\"GearVR\"        overlap=\"1.00\" fov=\"112.0\" dist=\"0.95\" dist2=\"1|0|0|0\" ca=\"0.090\" vig=\"100\" />\n<headset name=\"hom\" caption=\"HOMiDO\"        overlap=\"1.00\" fov=\"101.0\" dist=\"1.10\" dist2=\"1|0|0|0\" ca=\"0.075\" vig=\"100\" />\n<headset name=\"one\" caption=\"VR ONE\"        overlap=\"1.00\" fov=\"109.9\" dist=\"0.00\" dist2=\"1.139|0.093|0.018|0.207\" ca=\"0.090\" vig=\"35\" />\n<headset name=\"ccr\" caption=\"ColorCross VR\" overlap=\"1.00\" fov=\"70.0\"  dist=\"0.65\" dist2=\"1|0|0|0\" ca=\"0.000\" vig=\"100\" />\n<headset name=\"nod\" caption=\"No Distortion\" overlap=\"1.00\" fov=\"96.0\"  dist=\"0.00\" dist2=\"1|0|0|0\" ca=\"0.000\" vig=\"100\" />\n</vrheadsets>\n\n<hotspot name=\"vr_cursor\" keep=\"true\"\nurl=\"${webvrCursorImage}\"\nvisible=\"false\"\nenabled=\"false\"\ndistorted=\"true\"\ncrop=\"0|0|80|80\"\nscale=\"0.3\"\ndepth=\"1000\"\n/>\n\n<action name=\"vr_auto_click\">\nif(webvr.isenabled,\nif(%1 != null, set(vr_aclk_timeout, %1), set(vr_aclk_timeout, 2000));\ncopy(vr_aclk_t1, timertick);\nset(vr_aclk_waiting, true);\ncopy(vr_aclk_hotspot, name);\nset(hotspot[vr_cursor].crop,'0|0|80|80');\n\nasyncloop(vr_aclk_waiting AND vr_aclk_hotspot == name,\nsub(dt, timertick,vr_aclk_t1);\n\nif(!hovering,\nset(vr_aclk_waiting, false);\nset(hotspot[vr_cursor].crop,'0|0|80|80');\n,\ndiv(f, dt, vr_aclk_timeout);\nmul(f, 16);\nroundval(f);\nMath.min(f, 16);\nmul(f, 80);\n\ntxtadd(hotspot[vr_cursor].crop,get(f),'|0|80|80');\nsub(dt, 100);\nif(dt GT vr_aclk_timeout,\nset(vr_aclk_waiting,false);\nset(hotspot[vr_cursor].crop,'0|0|80|80');\nonclick();\n);\n);\n);\n);\n</action>\n<events name=\"webvr_events\" devices=\"html5\" keep=\"true\"\nonkeydown=\"if(webvr AND webvr.isenabled AND keycode==32, webvr.resetSensor() );\"\nonmousedown=\"if(webvr AND webvr.isenabled, webvr_showbuttons() );\"\n/>\n<action name=\"webvr_onavailable\">\nwebvr.loadsettings(local);\n</action>\n\n\n<action name=\"webvr_onunknowndevice\">\nif(webvr.isfake AND device.desktop AND webvr.havesettings == false,\nset(webvr.mobilevr_lens_overlap, 1.0);\nset(webvr.mobilevr_lens_fov, 96.0);\nset(webvr.mobilevr_lens_dist, 0.0);\nset(webvr.mobilevr_lens_dist2, '1|0|0|0');\nset(webvr.mobilevr_lens_ca, 0.0);\nset(webvr.mobilevr_lens_vign, 100);\n,\nset(ask_user_for_screensize,true);\n);\n</action>\n\n<action name=\"webvr_hide_all_non_vr_layers\">\nfor(set(i,0), i LT layer.count, inc(i),\ncopy(lr, layer[get(i)]);\nif(lr.vr !== true,\ncopy(lr.vr_backup_visible, lr.visible);\nset(lr.visible, false);\n);\n);\n</action>\n\n<action name=\"webvr_restore_layers\">\nfor(set(i,0), i LT layer.count, inc(i),\ncopy(lr, layer[get(i)]);\nif(lr.vr_backup_visible,\ncopy(lr.visible, lr.vr_backup_visible);\ndelete(lr.vr_backup_visible);\n);\n);\n</action>\n\n<action name=\"webvr_show_fakemode_info\">\nif('%1' == 'true',\naddlayer(webvr_fakemode_info);\nset(layer[webvr_fakemode_info].url, '%SWFPATH%/plugins/textfield.swf');\nset(layer[webvr_fakemode_info].keep, true);\nset(layer[webvr_fakemode_info].align, 'bottom');\nset(layer[webvr_fakemode_info].y, 80);\nset(layer[webvr_fakemode_info].background, false);\nset(layer[webvr_fakemode_info].css, 'color:#FFFFFF;text-align:center;');\nset(layer[webvr_fakemode_info].html, '[i][u]Simulated WebVR Mode![/u][/i][br]For real WebVR with headset tracking, either use a [a href=\"http://webvr.info\" target=\"_blank\" style=\"color:#FFFFFF;\"]WebVR-API-capable[/a] desktop browser or a mobile device and a VR headset.');\n,\nremovelayer(webvr_fakemode_info);\n);\n</action>\n\n<krpano webvr_setup_scale=\"calc:(1.0 + 1.0*(device.mobile AND stagescale LT 1.0)) / (1.0 + 1.0*device.mobile)\"\nwebvr_button_scale.normal=\"1.0\"\nwebvr_button_scale.mobile=\"1.6\"\n/>\n\n<style name=\"webvr_button_style\"\nurl=\"%SWFPATH%/plugins/textfield.swf\"\nbackgroundcolor=\"0x000000\"\nbackgroundalpha=\"0.5\"\nroundedge=\"calc:9*webvr_setup_scale*webvr_button_scale\"\ncss=\"calc:'color:#FFFFFF;font-size:' + 20*webvr_setup_scale*webvr_button_scale + 'px;'\"\npadding=\"calc:6*webvr_setup_scale*webvr_button_scale + ' ' + 10*webvr_setup_scale*webvr_button_scale\"\n/>\n\n<layer name=\"webvr_setupbutton\" keep=\"true\" vr=\"true\"\nstyle=\"webvr_button_style\"\nhtml=\"VR Setup\"\nalign=\"bottom\" y=\"24\"\nautoalpha=\"true\" alpha=\"0.0\"\nonclick=\"vr_setup()\"\n/>\n\n<action name=\"webvr_showbuttons\">\nstopdelayedcall(vr_button_fadeout);\nif(webvr.ismobilevr,\ntween(layer[webvr_exitbutton].alpha|layer[webvr_setupbutton].alpha, 1.0|1.0, 0.25);\ndelayedcall(vr_button_fadeout, 3.0, tween(layer[webvr_exitbutton].alpha|layer[webvr_setupbutton].alpha, 0.0|0.0, 1.0); );\n,\ntween(layer[webvr_exitbutton].alpha, 1.0, 0.25);\ndelayedcall(vr_button_fadeout, 3.0, tween(layer[webvr_exitbutton].alpha, 0.0, 1.0); );\n);\n</action>\n\n<action name=\"vr_setup\">\nset(webvr.vr_cursor_enabled, false);\n\ntween(layer[webvr_exitbutton].alpha,0);\ntween(layer[webvr_setupbutton].alpha,0);\n\naddlayer(vr_setup_bg);\nset(layer[vr_setup_bg].type, container);\nset(layer[vr_setup_bg].bgcolor, 0x000000);\nset(layer[vr_setup_bg].bgalpha, 0.5);\nset(layer[vr_setup_bg].bgcapture, true);\nset(layer[vr_setup_bg].handcursor, false);\nset(layer[vr_setup_bg].align, lefttop);\nset(layer[vr_setup_bg].width, 100%);\nset(layer[vr_setup_bg].height, 100%);\nset(layer[vr_setup_bg].zorder, 99999);\n\ncopy(i_screensize, webvr.mobilevr_screensize);\nif(i_screensize == 'auto', copy(i_screensize, webvr.devicesize));\nif(i_screensize LE 0, set(i_screensize, 5.0));\nroundval(i_screensize, 1);\ntxtadd(i_screensize, ' inch');\n\ncopy(i_ipd, webvr.mobilevr_ipd);\nroundval(i_ipd, 1);\ntxtadd(i_ipd, ' mm');\n\ncopy(i_fov, webvr.mobilevr_lens_fov);\nroundval(i_fov, 1);\n\ncopy(i_dist, webvr.mobilevr_lens_dist);\nroundval(i_dist, 2);\n\ncopy(i_dist2, webvr.mobilevr_lens_dist2);\ntxtsplit(i_dist2, '|', i_dist2_k1, i_dist2_k2, i_dist2_k3, i_dist2_k4);\nmul(i_dist2_k1,1);\nmul(i_dist2_k2,10);\nmul(i_dist2_k3,10);\nmul(i_dist2_k4,10);\nroundval(i_dist2_k1,2);\nroundval(i_dist2_k2,2);\nroundval(i_dist2_k3,2);\nroundval(i_dist2_k4,2);\n\ncopy(i_vig, webvr.mobilevr_lens_vign);\nroundval(i_vig, 0);\n\ncopy(i_overlap, webvr.mobilevr_lens_overlap);\nroundval(i_overlap, 2);\n\ncopy(i_ca, webvr.mobilevr_lens_ca);\nroundval(i_ca, 3);\n\nset(i_headset, 'Custom');\nfor(set(i,0), i LT vrheadsets.headset.count, inc(i),\ncopy(hs, vrheadsets.headset[get(i)]);\nif(i_overlap == hs.overlap AND i_fov == hs.fov AND i_dist == hs.dist AND i_dist2 == hs.dist2 AND i_ca == hs.ca AND i_vig == hs.vig , copy(i_headset, hs.caption));\n);\n\nset(known_size, true);\nset(sizcol, #FFFFFF);\ncopy(i_devicename, webvr.devicename);\nif(i_devicename == 'Unknown',\nif(webvr.mobilevr_screensize == 'auto',\nset(sizcol, #AA0000);\nset(known_size, false);\n,\nset(i_devicename, 'Custom');\n);\n);\n\naddlayer(vr_setup_m1);\nset(layer[vr_setup_m1].type, container);\nset(layer[vr_setup_m1].parent, vr_setup_bg);\nset(layer[vr_setup_m1].align, lefttop);\nset(layer[vr_setup_m1].width, 100%);\nset(layer[vr_setup_m1].height, 100%);\n\naddlayer(vr_setup_m3);\nset(layer[vr_setup_m3].type, container);\nset(layer[vr_setup_m3].parent, vr_setup_bg);\nset(layer[vr_setup_m3].align, lefttop);\nset(layer[vr_setup_m3].width, 100%);\nset(layer[vr_setup_m3].height, 100%);\nset(layer[vr_setup_m3].visible, false);\n\naddlayer(vr_setup_m2);\nset(layer[vr_setup_m2].type, container);\nset(layer[vr_setup_m2].parent, vr_setup_bg);\nset(layer[vr_setup_m2].align, lefttop);\nset(layer[vr_setup_m2].width, 100%);\nset(layer[vr_setup_m2].height, 100%);\nset(layer[vr_setup_m2].visible, false);\n\nset(vr_setup_text_parent, 'vr_setup_m1');\nvr_setup_createtext(vr_setup_title, 'MOBILE VR SETUP',       center, center, 0, -225, #FFFFFF,     false);\n\nvr_setup_createtext(vr_setup_dvn1, 'Device:',         center, right,  0, -145, #FFFFFF,     true, vr_setup_select('screen') );\nvr_setup_createtext(vr_setup_dvn2, get(i_devicename), center, left,   0, -145, get(sizcol), true, vr_setup_select('screen') );\nvr_setup_createtext(vr_setup_siz1, 'Screensize:',     center, right,  0, -105, #FFFFFF,     true, vr_setup_select('screen') );\nvr_setup_createtext(vr_setup_siz2, get(i_screensize), center, left,   0, -105, get(sizcol), true, vr_setup_select('screen') );\n\nvr_setup_createtext(vr_setup_ipd1, 'IPD:',            center, right,  0,  -35, #FFFFFF,     true, vr_setup_select('ipd') );\nvr_setup_createtext(vr_setup_ipd2, get(i_ipd),        center, left,   0,  -35, #FFFFFF,     true, vr_setup_select('ipd') );\n\nvr_setup_createtext(vr_setup_hmd1, 'VR Headset:',     center, right,  0,  +35, #FFFFFF,     true, vr_setup_select('headset') );\nvr_setup_createtext(vr_setup_hmd2, get(i_headset),    center, left,   0,  +35, #FFFFFF,     true, vr_setup_select('headset') );\n\nvr_setup_createtext(vr_setup_hmd3, 'Customize',       center, center, 0,  +75, #FFFFFF,     true, set(background,true), set(background,false), vr_setup_customize_headset() );\n\nif(webvr.iswebvr == false,\nvr_setup_createtext(vr_setup_cal, 'Calibrate Gyroscope',   center, center,    0, +145, #FFFFFF,     true, set(background,true), set(background,false), vr_setup_calibration() );\n);\n\nvr_setup_createtext(vr_setup_sav, 'SAVE',          center, center, -200, +225, #FFFFFF,     true, set(background,true), set(background,false), vr_setup_save() );\nvr_setup_createtext(vr_setup_rst, 'RESET',         center, center,    0, +225, #FFFFFF,     true, set(background,true), set(background,false), vr_setup_reset() );\nvr_setup_createtext(vr_setup_cls, 'CLOSE',         center, center, +200, +225, #FFFFFF,     true, set(background,true), set(background,false), vr_setup_close() );\n\nvr_setup_createbutton(vr_setup_btn1, '&#60;', left,  left,  5%, -35, #FFFFFF, true, null);\nvr_setup_createbutton(vr_setup_btn2, '&#62;', right, right, 5%, -35, #FFFFFF, true, null);\n\nset(vr_setup_text_parent, 'vr_setup_m3');\nvr_setup_createtext(vr_setup_m31, 'VR HEADSET', center, center, 0, -225, #FFFFFF, false);\n\nvr_setup_createtext(vr_setup_fov1,  'FOV:',           center, right,  0,  -80,  #FFFFFF,    true, vr_setup_select('fov') );\nvr_setup_createtext(vr_setup_fov2, get(i_fov),        center, left,   0,  -80,  #FFFFFF,    true, vr_setup_select('fov') );\nvr_setup_createtext(vr_setup_dst1, 'Distortion:',     center, right,  0,  -32,  #FFFFFF,    true, vr_setup_select('dist') );\nvr_setup_createtext(vr_setup_dst2, get(i_dist),       center, left,   0,  -32,  #FFFFFF,    true, vr_setup_select('dist') );\nvr_setup_createtext(vr_setup_d2tx, 'Dist2:',          center, right,  0,  +16,  #FFFFFF,    true, vr_setup_select('dist2k1') );\nvr_setup_createtext(vr_setup_d2k1, get(i_dist2_k1),   center, left,   0,  +16,  #FFFFFF,    true, vr_setup_select('dist2k1') );\nvr_setup_createtext(vr_setup_d2k2, get(i_dist2_k2),   center, left, +100, +16,  #FFFFFF,    true, vr_setup_select('dist2k2') );\nvr_setup_createtext(vr_setup_d2k3, get(i_dist2_k3),   center, left, +200, +16,  #FFFFFF,    true, vr_setup_select('dist2k3') );\nvr_setup_createtext(vr_setup_d2k4, get(i_dist2_k4),   center, left, +300, +16,  #FFFFFF,    true, vr_setup_select('dist2k4') );\n\n\nvr_setup_createtext(vr_setup_cac1, 'CA Corr:',        center, right,  0,  +64,  #FFFFFF,    true, vr_setup_select('ca') );\nvr_setup_createtext(vr_setup_cac2, get(i_ca),         center, left,   0,  +64,  #FFFFFF,    true, vr_setup_select('ca') );\nvr_setup_createtext(vr_setup_vig1, 'Vignette:',       center, right,  0, +112,  #FFFFFF,    true, vr_setup_select('vignette') );\nvr_setup_createtext(vr_setup_vig2, get(i_vig),        center, left,   0, +112,  #FFFFFF,    true, vr_setup_select('vignette') );\nvr_setup_createtext(vr_setup_olp1, 'Overlap:',        center, right,  0, +160,  #FFFFFF,    true, vr_setup_select('overlap') );\nvr_setup_createtext(vr_setup_olp2, get(i_overlap),    center, left,   0, +160,  #FFFFFF,    true, vr_setup_select('overlap') );\n\nvr_setup_createtext(vr_setup_m35, 'CLOSE',       center, center, 0, +225, #FFFFFF, true, set(background,true), set(background,false), vr_setup_close_sub_menus() );\n\nset(vr_setup_text_parent, 'vr_setup_m2');\nvr_setup_createtext(vr_setup_cb1, 'GYROSCOPE', center, center, 0, -225, #FFFFFF, false);\nvr_setup_createtext(vr_setup_cb2, 'Place the device on a flat and[br]stable surface and tab calibrate[br]to correct a gyroscope drifting.', center, center, 0, -95, #FFFFFF, false, vr_setup_select('screen') );\nvr_setup_createtext(vr_setup_cb3, 'CALIBRATE',   center, center, 0,  +55, #FFFFFF, true, set(background,true), set(background,false), vr_setup_do_calibration() );\nvr_setup_createtext(vr_setup_cb4, 'RESET',       center, center, 0, +125, #FFFFFF, true, set(background,true), set(background,false), webvr.resetcalibration() );\nvr_setup_createtext(vr_setup_cb5, 'CLOSE',       center, center, 0, +225, #FFFFFF, true, set(background,true), set(background,false), vr_setup_close_sub_menus() );\n\nvr_setup_createtext(vr_setup_cb6, 'Calibrating...',      bottom, center, 0, 40, #FFFFFF, false, null );\nvr_setup_createtext(vr_setup_cb7, 'Calibration okay.',   bottom, center, 0, 40, #FFFFFF, false, null );\nvr_setup_createtext(vr_setup_cb8, 'Calibration failed!', bottom, center, 0, 40, #FFFFFF, false, null );\nset(layer[vr_setup_cb6].autoalpha, true);\nset(layer[vr_setup_cb7].autoalpha, true);\nset(layer[vr_setup_cb8].autoalpha, true);\nset(layer[vr_setup_cb6].alpha, 0.0);\nset(layer[vr_setup_cb7].alpha, 0.0);\nset(layer[vr_setup_cb8].alpha, 0.0);\n\nif(known_size == false,\nvr_setup_select('screen', true);\n,\nvr_setup_select('ipd', true);\n);\n</action>\n\n<action name=\"vr_setup_createtext\">\naddlayer(%1);\nset(layer[%1].parent, get(vr_setup_text_parent));\nset(layer[%1].url, '%SWFPATH%/plugins/textfield.swf');\nset(layer[%1].css, calc('text-align:%3;color:%7;font-size:'+40*webvr_setup_scale+'px;font-weight:bold;'));\nset(layer[%1].padding, calc(0 + ' ' + 8*webvr_setup_scale));\nset(layer[%1].roundedge, calc(8*webvr_setup_scale));\nset(layer[%1].background, false);\nset(layer[%1].backgroundcolor, 0xFFFFFF);\nset(layer[%1].backgroundalpha, 0.25);\nset(layer[%1].align, %3);\nset(layer[%1].edge, %4);\nset(layer[%1].x, calc(%5 * webvr_setup_scale));\nset(layer[%1].y, calc(%6 * webvr_setup_scale));\nset(layer[%1].html, %2);\nset(layer[%1].enabled, %8);\nset(layer[%1].ondown, %9);\nset(layer[%1].onup, %10);\nset(layer[%1].onclick, %11);\n</action>\n\n<action name=\"vr_setup_createbutton\">\nvr_setup_createtext(%1,%2,%3,%4,%5,%6,%7,%8,%9);\nset(layer[%1].css, calc('vertical-align:middle;text-align:center;color:%7;font-size:'+60*webvr_setup_scale+'px;font-weight:bold;'));\nset(layer[%1].background, true);\nset(layer[%1].padding, 0);\nset(layer[%1].roundedge, calc(40 * webvr_setup_scale));\nset(layer[%1].width, calc(70 * webvr_setup_scale));\nset(layer[%1].height, calc(70 * webvr_setup_scale));\nset(layer[%1].vcenter, true);\n</action>\n\n<action name=\"vr_setup_reset\">\nset(webvr.mobilevr_screensize, 'auto');\ncopy(i_screensize, webvr.devicesize);\nif(i_screensize LE 0, set(i_screensize, 5.0); );\nroundval(i_screensize, 1);\nset(layer[vr_setup_dvn2].html, get(webvr.devicename));\ntxtadd(layer[vr_setup_siz2].html, get(i_screensize), ' inch');\n\nset(webvr.mobilevr_ipd, 63.5);\ncopy(i_ipd, webvr.mobilevr_ipd);\nroundval(i_ipd, 1);\ntxtadd(layer[vr_setup_ipd2].html, get(i_ipd), ' mm');\n\nset(webvr.mobilevr_lens_fov, 100);\nset(webvr.mobilevr_lens_dist, 0.5);\nset(webvr.mobilevr_lens_dist2, '1|0|0|0');\nset(webvr.mobilevr_lens_vign, 100);\nset(webvr.mobilevr_lens_overlap, 1.0);\nset(webvr.mobilevr_lens_ca, 0.0);\n\nif(webvr.isfake AND device.desktop,\nvr_setup_change_headset(-1);\n,\nvr_setup_change_headset(+1);\n);\n\nvr_setup_select(get(selected_var));\n</action>\n\n<action name=\"vr_setup_close\">\nremovelayer(vr_setup_bg, true);\n\nset(webvr.vr_cursor_enabled, true);\n</action>\n\n<action name=\"vr_setup_save\">\nwebvr.saveSettings(local);\nvr_setup_close();\n</action>\n\n<action name=\"vr_setup_customize_headset\">\nset(layer[vr_setup_bg].bgalpha, 0.1);\n\nset(layer[vr_setup_m1].visible,false);\nset(layer[vr_setup_m2].visible,false);\nset(layer[vr_setup_m3].visible,true);\n\nset(layer[vr_setup_hmd1].parent, vr_setup_m3);\nset(layer[vr_setup_hmd2].parent, vr_setup_m3);\nset(layer[vr_setup_btn1].parent, vr_setup_m3);\nset(layer[vr_setup_btn2].parent, vr_setup_m3);\n\nset(layer[vr_setup_hmd1].y, calc(-145 * webvr_setup_scale));\nset(layer[vr_setup_hmd2].y, calc(-145 * webvr_setup_scale));\n\ncopy(old_selection, selected_var);\nvr_setup_select('headset');\n</action>\n\n<action name=\"vr_setup_calibration\">\nset(layer[vr_setup_m1].visible,false);\nset(layer[vr_setup_m2].visible,true);\n</action>\n\n<action name=\"vr_setup_close_sub_menus\">\nset(layer[vr_setup_bg].bgalpha, 0.5);\n\nset(layer[vr_setup_m1].visible,true);\nset(layer[vr_setup_m2].visible,false);\nset(layer[vr_setup_m3].visible,false);\n\nset(layer[vr_setup_hmd1].parent, vr_setup_m1);\nset(layer[vr_setup_hmd2].parent, vr_setup_m1);\nset(layer[vr_setup_btn1].parent, vr_setup_m1);\nset(layer[vr_setup_btn2].parent, vr_setup_m1);\n\nset(layer[vr_setup_hmd1].y, calc(+35 * webvr_setup_scale));\nset(layer[vr_setup_hmd2].y, calc(+35 * webvr_setup_scale));\n\nif(old_selection,\nvr_setup_select(get(old_selection));\ndelete(old_selection);\n);\n</action>\n\n<action name=\"vr_setup_do_calibration\">\nif(!webvr.isfake,\ntween(layer[vr_setup_cb6].alpha, 1.0, 0.1);\ntween(layer[vr_setup_cb7].alpha, 0.0, 0.1);\ntween(layer[vr_setup_cb8].alpha, 0.0, 0.1);\nwebvr.calibrate(\ntween(layer[vr_setup_cb6].alpha, 0.0, 0.1);\ntween(layer[vr_setup_cb7].alpha, 1.0, 0.1);\ndelayedcall(2.0, tween(layer[vr_setup_cb7].alpha, 0.0, 0.25) );\n,\ntween(layer[vr_setup_cb6].alpha, 0.0, 0.1);\ntween(layer[vr_setup_cb8].alpha, 1.0, 0.1);\ndelayedcall(2.0, tween(layer[vr_setup_cb8].alpha, 0.0, 0.25) );\n);\n);\n</action>\n\n<action name=\"vr_setup_update_dist2\">\ntxtadd(webvr.mobilevr_lens_dist2, get(i_dist2_k1), '|', calc(i_dist2_k2/10.0), '|', calc(i_dist2_k3/10.0), '|', calc(i_dist2_k4/10.0));\nvr_setup_change_headset(0);\n</action>\n\n<action name=\"vr_setup_select\">\n\nset(layer[vr_setup_siz2].background, false);\nset(layer[vr_setup_ipd2].background, false);\nset(layer[vr_setup_hmd2].background, false);\nset(layer[vr_setup_fov2].background, false);\nset(layer[vr_setup_dst2].background, false);\nset(layer[vr_setup_d2k1].background, false);\nset(layer[vr_setup_d2k2].background, false);\nset(layer[vr_setup_d2k3].background, false);\nset(layer[vr_setup_d2k4].background, false);\nset(layer[vr_setup_vig2].background, false);\nset(layer[vr_setup_cac2].background, false);\nset(layer[vr_setup_olp2].background, false);\n\nset(selected_setting, null);\ndelete(selected_var_value);\n\nset(layer[vr_setup_btn1].ondown, vr_setup_change_ondown(-1) );\nset(layer[vr_setup_btn2].ondown, vr_setup_change_ondown(+1) );\nset(selected_var_callback, null);\n\nset(selected_var, %1);\n\nif(selected_var == 'screen',\nset(selected_setting,      vr_setup_siz2);\nset(selected_var_name,     'webvr.mobilevr_screensize');\nset(selected_var_postfix,  ' inch');\ncopy(selected_var_value,   get(selected_var_name));\nif(selected_var_value == 'auto', copy(selected_var_value, webvr.devicesize));\nif(selected_var_value LE 0, set(selected_var_value, 5.0));\nset(selected_var_step,     0.1);\nset(selected_var_min,      4);\nset(selected_var_max,      10);\nset(selected_var_round,    1);\nset(selected_var_callback, vr_setup_change_screen() );\n);\n\nif(selected_var == 'ipd',\nset(selected_setting,      vr_setup_ipd2);\nset(selected_var_name,     'webvr.mobilevr_ipd');\nset(selected_var_postfix,  ' mm');\ncopy(selected_var_value,   get(selected_var_name));\nset(selected_var_step,     0.1);\nset(selected_var_min,      40);\nset(selected_var_max,      120);\nset(selected_var_round,    1);\n);\n\nif(selected_var == 'headset',\nset(selected_setting,      vr_setup_hmd2);\nset(layer[vr_setup_btn1].ondown, vr_setup_change_headset(-1) );\nset(layer[vr_setup_btn2].ondown, vr_setup_change_headset(+1) );\n);\n\nif(selected_var == 'fov',\nset(selected_setting,      vr_setup_fov2);\nset(selected_var_name,     'webvr.mobilevr_lens_fov');\nset(selected_var_postfix,  '');\ncopy(selected_var_value,   get(selected_var_name));\nset(selected_var_step,     0.1);\nset(selected_var_min,      40);\nset(selected_var_max,      179);\nset(selected_var_round,    1);\nset(selected_var_callback, vr_setup_change_headset(0) );\n);\n\nif(selected_var == 'dist',\nset(selected_setting,      vr_setup_dst2);\nset(selected_var_name,     'webvr.mobilevr_lens_dist');\nset(selected_var_postfix,  '');\ncopy(selected_var_value,   get(selected_var_name));\nset(selected_var_step,     0.01);\nset(selected_var_min,      0);\nset(selected_var_max,      5);\nset(selected_var_round,    2);\nset(selected_var_callback, vr_setup_change_headset(0) );\n);\n\nif(selected_var == 'dist2k1',\nset(selected_setting,      vr_setup_d2k1);\nset(selected_var_name,     'i_dist2_k1');\nset(selected_var_postfix,  '');\ncopy(selected_var_value,   get(selected_var_name));\nset(selected_var_step,     0.01);\nset(selected_var_min,      -9);\nset(selected_var_max,      +9);\nset(selected_var_round,    2);\nset(selected_var_callback, vr_setup_update_dist2() );\n);\n\nif(selected_var == 'dist2k2',\nset(selected_setting,      vr_setup_d2k2);\nset(selected_var_name,     'i_dist2_k2');\nset(selected_var_postfix,  '');\ncopy(selected_var_value,   get(selected_var_name));\nset(selected_var_step,     0.01);\nset(selected_var_min,      -9);\nset(selected_var_max,      +9);\nset(selected_var_round,    2);\nset(selected_var_callback, vr_setup_update_dist2() );\n);\n\nif(selected_var == 'dist2k3',\nset(selected_setting,      vr_setup_d2k3);\nset(selected_var_name,     'i_dist2_k3');\nset(selected_var_postfix,  '');\ncopy(selected_var_value,   get(selected_var_name));\nset(selected_var_step,     0.01);\nset(selected_var_min,      -9);\nset(selected_var_max,      +9);\nset(selected_var_round,    2);\nset(selected_var_callback, vr_setup_update_dist2() );\n);\n\nif(selected_var == 'dist2k4',\nset(selected_setting,      vr_setup_d2k4);\nset(selected_var_name,     'i_dist2_k4');\nset(selected_var_postfix,  '');\ncopy(selected_var_value,   get(selected_var_name));\nset(selected_var_step,     0.01);\nset(selected_var_min,      -9);\nset(selected_var_max,      +9);\nset(selected_var_round,    2);\nset(selected_var_callback, vr_setup_update_dist2() );\n);\n\nif(selected_var == 'vignette',\nset(selected_setting,      vr_setup_vig2);\nset(selected_var_name,     'webvr.mobilevr_lens_vign');\nset(selected_var_postfix,  '');\ncopy(selected_var_value,   get(selected_var_name));\nset(selected_var_step,     1);\nset(selected_var_min,      10);\nset(selected_var_max,      200);\nset(selected_var_round,    0);\nset(selected_var_callback, vr_setup_change_headset(0) );\n);\n\nif(selected_var == 'ca',\nset(selected_setting,      vr_setup_cac2);\nset(selected_var_name,     'webvr.mobilevr_lens_ca');\nset(selected_var_postfix,  '');\ncopy(selected_var_value,   get(selected_var_name));\nset(selected_var_step,     0.01);\nset(selected_var_min,      -1.0);\nset(selected_var_max,      +1.0);\nset(selected_var_round,    2);\nset(selected_var_callback, vr_setup_change_headset(0) );\n);\n\nif(selected_var == 'overlap',\nset(selected_setting,      vr_setup_olp2);\nset(selected_var_name,     'webvr.mobilevr_lens_overlap');\nset(selected_var_postfix,  '');\ncopy(selected_var_value,   get(selected_var_name));\nset(selected_var_step,     0.01);\nset(selected_var_min,      0.5);\nset(selected_var_max,      2.0);\nset(selected_var_round,    2);\nset(selected_var_callback, vr_setup_change_headset(0) );\n);\n\nif(selected_setting != null,\nset(layer[get(selected_setting)].background, true);\nif(%2 == true,\nset(layer[vr_setup_btn1].y, get(layer[get(selected_setting)].y));\nset(layer[vr_setup_btn2].y, get(layer[get(selected_setting)].y));\n,\ntween(layer[vr_setup_btn1].y, get(layer[get(selected_setting)].y));\ntween(layer[vr_setup_btn2].y, get(layer[get(selected_setting)].y));\n);\n);\n</action>\n\n<action name=\"vr_setup_change_screen\">\nset(layer[vr_setup_dvn2].html, 'Custom');\nset(layer[vr_setup_dvn2].css, calc('color:#FFFFFF;font-size:'+40*webvr_setup_scale+'px;font-weight:bold;'));\nset(layer[vr_setup_siz2].css, calc('color:#FFFFFF;font-size:'+40*webvr_setup_scale+'px;font-weight:bold;'));\n</action>\n\n<action name=\"vr_setup_change_ondown\">\ncopy(t0,timertick);\nset(t1,0);\nasyncloop(pressed,\ncopy(t2,timertick);\nsub(dt,t2,t1);\nif(dt GT 100,\ncopy(t1,t2);\nsub(dt,t1,t0);\ndiv(dt,1000);\nMath.max(dt,1);\nmul(dt,%1);\nvr_setup_adjust(get(dt));\n);\n);\n</action>\n\n<action name=\"vr_setup_adjust\">\nif(selected_setting != null,\nmul(change, selected_var_step, %1);\nadd(selected_var_value, change);\nMath.max(selected_var_value, selected_var_min);\nMath.min(selected_var_value, selected_var_max);\nroundval(selected_var_value, get(selected_var_round));\ntween(get(selected_var_name), get(selected_var_value), 0.1);\ntxtadd(layer[get(selected_setting)].html, get(selected_var_value), get(selected_var_postfix));\nif(selected_var_callback != null, selected_var_callback());\n);\n</action>\n\n<action name=\"vr_setup_change_headset\">\nset(i_headset, 'Custom');\nif(%1 != 0,\ncopy(i_fov, webvr.mobilevr_lens_fov);\nroundval(i_fov, 1);\ncopy(i_dist, webvr.mobilevr_lens_dist);\nroundval(i_dist, 2);\ncopy(i_dist2, webvr.mobilevr_lens_dist2);\ncopy(i_vig, webvr.mobilevr_lens_vign);\nroundval(i_vig, 0);\ncopy(i_ca, webvr.mobilevr_lens_ca);\nroundval(i_ca, 3);\ncopy(i_overlap, webvr.mobilevr_lens_overlap);\nroundval(i_overlap, 2);\nset(i_hsindex, -1);\ncopy(i_hscount, vrheadsets.headset.count);\nfor(set(i,0), i LT i_hscount, inc(i),\ncopy(hs, vrheadsets.headset[get(i)]);\nif(i_overlap == hs.overlap AND i_fov == hs.fov AND i_dist == hs.dist AND i_dist2 == hs.dist2 AND i_ca == hs.ca AND i_vig == hs.vig , copy(i_hsindex, i); copy(i_headset, hs.caption); );\n);\n\nif(%1 GT 0,\nadd(i_hsindex, 1);\nif(i_hsindex GE i_hscount, set(i_hsindex,0));\n,\nsub(i_hsindex, 1);\nif(i_hsindex LT 0, sub(i_hsindex,i_hscount,1));\n);\n\ncopy(hs, vrheadsets.headset[get(i_hsindex)]);\ncopy(i_headset, hs.caption);\ncopy(i_overlap, hs.overlap);\ncopy(i_fov,     hs.fov);\ncopy(i_dist,    hs.dist);\ncopy(i_dist2,   hs.dist2);\ncopy(i_ca,      hs.ca);\ncopy(i_vig,     hs.vig);\n);\n\ncopy(layer[vr_setup_hmd2].html, i_headset);\nif(%1 != 0,\ncopy(webvr.mobilevr_lens_overlap, i_overlap);\ncopy(webvr.mobilevr_lens_fov, i_fov);\ncopy(webvr.mobilevr_lens_dist, i_dist);\ncopy(webvr.mobilevr_lens_dist2, i_dist2);\ncopy(webvr.mobilevr_lens_ca, i_ca);\ncopy(webvr.mobilevr_lens_vign, i_vig);\ncopy(layer[vr_setup_olp2].html, i_overlap);\ncopy(layer[vr_setup_fov2].html, i_fov);\ncopy(layer[vr_setup_dst2].html, i_dist);\n\ntxtsplit(i_dist2, '|', i_dist2_k1, i_dist2_k2, i_dist2_k3, i_dist2_k4);\nmul(i_dist2_k1,1);\nmul(i_dist2_k2,10);\nmul(i_dist2_k3,10);\nmul(i_dist2_k4,10);\nroundval(i_dist2_k1,2);\nroundval(i_dist2_k2,2);\nroundval(i_dist2_k3,2);\nroundval(i_dist2_k4,2);\ncopy(layer[vr_setup_d2k1].html, i_dist2_k1);\ncopy(layer[vr_setup_d2k2].html, i_dist2_k2);\ncopy(layer[vr_setup_d2k3].html, i_dist2_k3);\ncopy(layer[vr_setup_d2k4].html, i_dist2_k4);\n\ncopy(layer[vr_setup_cac2].html, i_ca);\ncopy(layer[vr_setup_vig2].html, i_vig);\n);\n</action>`\n\nexport const gyroXml = `<plugin name=\"gyro\" devices=\"html5\" keep=\"true\"\nurl=\"${gyro2MinJs}\"\nenabled=\"false\"\ncamroll=\"true\"\nfriction=\"0.0\"\ntouch_mode=\"horizontaloffset\"\nsensor_mode=\"1\"\nsoftstart=\"0.5\"\nautocalibration=\"false\" />`\n\nexport const contextMenuXml = `<contextmenu fullscreen=\"false\" versioninfo=\"false\" />`\nexport const threeJsXml = `<!--add the custom ThreeJS plugin-->\n<plugin name=\"threejs\" url=\"${threeKrpanopluginMinJs}\" keep=\"true\" />`\nexport const gyroMessageXml = `<!--add the custom ThreeJS plugin-->\n<plugin name=\"gyroMessage\" enabled=\"false\" url=\"${gyroMessageMinJs}\" keep=\"true\" />`\n","import {\n  getIEVersion,\n  isEmpty\n} from '@/common/utils'\nimport {\n  webVRXml,\n  gyroXml,\n  threeJsXml,\n  contextMenuXml,\n  gyroMessageXml\n} from '@/krpanoViewer/xml/plugins'\nimport krpanoHelpers from '@/krpanoViewer/krpano-helpers'\nimport krpanoConstants from '@/krpanoViewer/krpano-constants'\nimport getStylesXml from '@/krpanoViewer/xml/styles'\nimport getLogoTripodXml from '@/krpanoViewer/xml/tripod'\nimport eventsXml from '@/krpanoViewer/xml/events'\nimport getScenesXml from '@/krpanoViewer/xml/scenes'\nimport getActionsXml from '@/krpanoViewer/xml/actions'\nimport CommonViewer from '@/common/common-viewer'\nimport KrpanoAutoRotate from '@/krpanoViewer/extends/auto-rotate'\nimport KrpanoGyro from '@/krpanoViewer/extends/gyro'\nimport KrpanoTripod from '@/krpanoViewer/extends/tripod'\nimport KrpanoBasic from '@/krpanoViewer/extends/basic'\nimport KrpanoInitView from '@/krpanoViewer/extends/init-view'\nimport KrpanoLoadingPanorama from '@/krpanoViewer/extends/loading-panorama'\nimport classes from 'extends-classes'\n\nclass KrpanoViewer extends classes(CommonViewer, KrpanoAutoRotate, KrpanoGyro, KrpanoTripod, KrpanoBasic, KrpanoInitView, KrpanoLoadingPanorama) {\n  constructor () {\n    super(...arguments)\n    this.checkKrpano()\n  }\n\n  generateKrpano (config) {\n    const { embedpano, removepano } = window\n    if (!(embedpano && removepano)) {\n      throw new Error('krpano player is required')\n    }\n    krpanoConstants.setKrpanoId('krpano_' + Math.floor(Math.random() * (100000 - 100 + 1) + 100))\n    krpanoHelpers.setConfig.call(this, config)\n    const panoramas = this.getPanoramas()\n\n    const initKrpanoVRMode = () => {\n      for (let i = 0; i < panoramas.length; i++) {\n        krpanoConstants.addVrModeShouldShow(`vr_panorama_${i}`)\n        krpanoConstants.addVrModeShouldShow(`vr_panorama_text_${i}`)\n      }\n    }\n\n    const generateXml = () => {\n      if (panoramas.length <= 0) {\n        krpanoConstants.setKrpanoXml('')\n        return\n      }\n      const tripodSettings = this.getTripodSettings()\n      const stylesXml = getStylesXml.call(this, panoramas, 0)\n      const scenesXml = getScenesXml.call(this, panoramas, 0)\n      const actionsXml = getActionsXml.call(this, panoramas, 0)\n      const logoTripodXml = getLogoTripodXml(tripodSettings.image, tripodSettings.size, panoramas[0].isTopLogo)\n      krpanoConstants.setKrpanoXml(`<krpano onstart=\"startup();\">\n      ${webVRXml}\n      ${gyroXml}\n      ${gyroMessageXml}\n      ${contextMenuXml}\n      ${logoTripodXml}\n      ${eventsXml}\n      ${stylesXml}\n      ${scenesXml}\n      ${actionsXml}\n      ${!getIEVersion() ? threeJsXml : ''}\n      </krpano>`)\n    }\n\n    initKrpanoVRMode()\n    generateXml()\n    krpanoHelpers.embedPano.call(this)\n\n    return this\n  }\n\n  destroy () {\n    const { removepano } = window\n    if (krpanoConstants.getKrpanoId && krpanoConstants.getKrpanoEl) {\n      const krpanoId = krpanoConstants.getKrpanoId()\n      removepano(krpanoId)\n      console.log('pano removed')\n      krpanoConstants.setKrpanoEl({})\n      krpanoHelpers.stopAutoRotateEvent.call(this).removeEvent()\n    }\n  }\n\n  changePanorama (panoramaId = '') {\n    this.selectPanorama(panoramaId)\n    if (!isEmpty(krpanoConstants.getKrpanoEl)) {\n      const krpanoEl = krpanoConstants.getKrpanoEl()\n      krpanoEl.call(`prepare_change_scene(panorama_${panoramaId || ''}, ${panoramaId || ''});`)\n    }\n  }\n\n  toggleGyro (bool) {\n    const krpanoEl = krpanoConstants.getKrpanoEl()\n    if (bool) {\n      krpanoEl.call('start_gyro();')\n    } else {\n      krpanoEl.call('stop_gyro();')\n    }\n  }\n\n  toggleVRMode (bool) {\n    const krpanoEl = krpanoConstants.getKrpanoEl()\n    if (bool) {\n      krpanoEl.call('WebVR.enterVR();')\n    } else {\n      krpanoEl.call('WebVR.exitVR();')\n    }\n  }\n\n  checkKrpano () {\n    if (typeof window === 'undefined' || !window.krpanoJS) {\n      throw new Error('You need to include krpanoJS script or import it first. Use it before vrmaker.')\n    }\n  }\n}\n\nexport default KrpanoViewer\n","import KrpanoViewer from '@/krpanoViewer'\nimport AframeViewer from '@/aframeViewer'\n\nconst VRMaker = {\n  AframeViewer,\n  KrpanoViewer\n}\n\nwindow.VRMaker = VRMaker\nexport default VRMaker\n"],"sourceRoot":""}
